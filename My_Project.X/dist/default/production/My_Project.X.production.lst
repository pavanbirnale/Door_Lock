

Microchip MPLAB XC8 Assembler V2.50 build 20240725155939 
                                                                                               Thu Jul 17 22:00:47 2025

Microchip MPLAB XC8 C Compiler v2.50 (Free license) build 20240725155939 Og1 
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataCOMRAM,global,class=CODE,space=0,delta=1,noexec
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,space=0,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,space=0,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    10                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	text0,global,reloc=2,class=CODE,space=0,delta=1
    12                           	psect	text1,global,reloc=2,class=CODE,space=0,delta=1
    13                           	psect	text2,global,reloc=2,class=CODE,space=0,delta=1
    14                           	psect	text3,global,reloc=2,class=CODE,space=0,delta=1
    15                           	psect	text4,global,reloc=2,class=CODE,space=0,delta=1
    16                           	psect	text5,global,reloc=2,class=CODE,space=0,delta=1
    17                           	psect	text6,global,reloc=2,class=CODE,space=0,delta=1,group=2
    18                           	psect	text7,global,reloc=2,class=CODE,space=0,delta=1
    19                           	psect	text8,global,reloc=2,class=CODE,space=0,delta=1
    20                           	psect	text9,global,reloc=2,class=CODE,space=0,delta=1
    21                           	psect	text10,global,reloc=2,class=CODE,space=0,delta=1
    22                           	psect	text11,global,reloc=2,class=CODE,space=0,delta=1
    23                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    24                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    25   000000                     
    26                           ; Generated 17/10/2023 GMT
    27                           ; 
    28                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    29                           ; All rights reserved.
    30                           ; 
    31                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    32                           ; 
    33                           ; Redistribution and use in source and binary forms, with or without modification, are
    34                           ; permitted provided that the following conditions are met:
    35                           ; 
    36                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    37                           ;        conditions and the following disclaimer.
    38                           ; 
    39                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    40                           ;        of conditions and the following disclaimer in the documentation and/or other
    41                           ;        materials provided with the distribution. Publication is not required when
    42                           ;        this file is used in an embedded application.
    43                           ; 
    44                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    45                           ;        software without specific prior written permission.
    46                           ; 
    47                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    48                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    49                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    50                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    51                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    52                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    53                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    54                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    55                           ; 
    56                           ; 
    57                           ; Code-generator required, PIC18F4550 Definitions
    58                           ; 
    59                           ; SFR Addresses
    60   000FE0                     bsr             equ	4064
    61   000FE9                     fsr0            equ	4073
    62   000FEA                     fsr0h           equ	4074
    63   000FE9                     fsr0l           equ	4073
    64   000FE1                     fsr1            equ	4065
    65   000FE2                     fsr1h           equ	4066
    66   000FE1                     fsr1l           equ	4065
    67   000FD9                     fsr2            equ	4057
    68   000FDA                     fsr2h           equ	4058
    69   000FD9                     fsr2l           equ	4057
    70   000FEF                     indf0           equ	4079
    71   000FE7                     indf1           equ	4071
    72   000FDF                     indf2           equ	4063
    73   000FF2                     intcon          equ	4082
    74   000000                     nvmcon          equ	0
    75   000FF9                     pcl             equ	4089
    76   000FFA                     pclath          equ	4090
    77   000FFB                     pclatu          equ	4091
    78   000FEB                     plusw0          equ	4075
    79   000FE3                     plusw1          equ	4067
    80   000FDB                     plusw2          equ	4059
    81   000FED                     postdec0        equ	4077
    82   000FE5                     postdec1        equ	4069
    83   000FDD                     postdec2        equ	4061
    84   000FEE                     postinc0        equ	4078
    85   000FE6                     postinc1        equ	4070
    86   000FDE                     postinc2        equ	4062
    87   000FEC                     preinc0         equ	4076
    88   000FE4                     preinc1         equ	4068
    89   000FDC                     preinc2         equ	4060
    90   000FF3                     prod            equ	4083
    91   000FF4                     prodh           equ	4084
    92   000FF3                     prodl           equ	4083
    93   000FD8                     status          equ	4056
    94   000FF5                     tablat          equ	4085
    95   000FF6                     tblptr          equ	4086
    96   000FF7                     tblptrh         equ	4087
    97   000FF6                     tblptrl         equ	4086
    98   000FF8                     tblptru         equ	4088
    99   000FFD                     tosl            equ	4093
   100   000FE8                     wreg            equ	4072
   101   000F62                     SPPDATA         equ	3938	;# 
   102   000F63                     SPPCFG          equ	3939	;# 
   103   000F64                     SPPEPS          equ	3940	;# 
   104   000F65                     SPPCON          equ	3941	;# 
   105   000F66                     UFRM            equ	3942	;# 
   106   000F66                     UFRML           equ	3942	;# 
   107   000F67                     UFRMH           equ	3943	;# 
   108   000F68                     UIR             equ	3944	;# 
   109   000F69                     UIE             equ	3945	;# 
   110   000F6A                     UEIR            equ	3946	;# 
   111   000F6B                     UEIE            equ	3947	;# 
   112   000F6C                     USTAT           equ	3948	;# 
   113   000F6D                     UCON            equ	3949	;# 
   114   000F6E                     UADDR           equ	3950	;# 
   115   000F6F                     UCFG            equ	3951	;# 
   116   000F70                     UEP0            equ	3952	;# 
   117   000F71                     UEP1            equ	3953	;# 
   118   000F72                     UEP2            equ	3954	;# 
   119   000F73                     UEP3            equ	3955	;# 
   120   000F74                     UEP4            equ	3956	;# 
   121   000F75                     UEP5            equ	3957	;# 
   122   000F76                     UEP6            equ	3958	;# 
   123   000F77                     UEP7            equ	3959	;# 
   124   000F78                     UEP8            equ	3960	;# 
   125   000F79                     UEP9            equ	3961	;# 
   126   000F7A                     UEP10           equ	3962	;# 
   127   000F7B                     UEP11           equ	3963	;# 
   128   000F7C                     UEP12           equ	3964	;# 
   129   000F7D                     UEP13           equ	3965	;# 
   130   000F7E                     UEP14           equ	3966	;# 
   131   000F7F                     UEP15           equ	3967	;# 
   132   000F80                     PORTA           equ	3968	;# 
   133   000F81                     PORTB           equ	3969	;# 
   134   000F82                     PORTC           equ	3970	;# 
   135   000F83                     PORTD           equ	3971	;# 
   136   000F84                     PORTE           equ	3972	;# 
   137   000F89                     LATA            equ	3977	;# 
   138   000F8A                     LATB            equ	3978	;# 
   139   000F8B                     LATC            equ	3979	;# 
   140   000F8C                     LATD            equ	3980	;# 
   141   000F8D                     LATE            equ	3981	;# 
   142   000F92                     TRISA           equ	3986	;# 
   143   000F92                     DDRA            equ	3986	;# 
   144   000F93                     TRISB           equ	3987	;# 
   145   000F93                     DDRB            equ	3987	;# 
   146   000F94                     TRISC           equ	3988	;# 
   147   000F94                     DDRC            equ	3988	;# 
   148   000F95                     TRISD           equ	3989	;# 
   149   000F95                     DDRD            equ	3989	;# 
   150   000F96                     TRISE           equ	3990	;# 
   151   000F96                     DDRE            equ	3990	;# 
   152   000F9B                     OSCTUNE         equ	3995	;# 
   153   000F9D                     PIE1            equ	3997	;# 
   154   000F9E                     PIR1            equ	3998	;# 
   155   000F9F                     IPR1            equ	3999	;# 
   156   000FA0                     PIE2            equ	4000	;# 
   157   000FA1                     PIR2            equ	4001	;# 
   158   000FA2                     IPR2            equ	4002	;# 
   159   000FA6                     EECON1          equ	4006	;# 
   160   000FA7                     EECON2          equ	4007	;# 
   161   000FA8                     EEDATA          equ	4008	;# 
   162   000FA9                     EEADR           equ	4009	;# 
   163   000FAB                     RCSTA           equ	4011	;# 
   164   000FAB                     RCSTA1          equ	4011	;# 
   165   000FAC                     TXSTA           equ	4012	;# 
   166   000FAC                     TXSTA1          equ	4012	;# 
   167   000FAD                     TXREG           equ	4013	;# 
   168   000FAD                     TXREG1          equ	4013	;# 
   169   000FAE                     RCREG           equ	4014	;# 
   170   000FAE                     RCREG1          equ	4014	;# 
   171   000FAF                     SPBRG           equ	4015	;# 
   172   000FAF                     SPBRG1          equ	4015	;# 
   173   000FB0                     SPBRGH          equ	4016	;# 
   174   000FB1                     T3CON           equ	4017	;# 
   175   000FB2                     TMR3            equ	4018	;# 
   176   000FB2                     TMR3L           equ	4018	;# 
   177   000FB3                     TMR3H           equ	4019	;# 
   178   000FB4                     CMCON           equ	4020	;# 
   179   000FB5                     CVRCON          equ	4021	;# 
   180   000FB6                     ECCP1AS         equ	4022	;# 
   181   000FB6                     CCP1AS          equ	4022	;# 
   182   000FB7                     ECCP1DEL        equ	4023	;# 
   183   000FB7                     CCP1DEL         equ	4023	;# 
   184   000FB8                     BAUDCON         equ	4024	;# 
   185   000FB8                     BAUDCTL         equ	4024	;# 
   186   000FBA                     CCP2CON         equ	4026	;# 
   187   000FBB                     CCPR2           equ	4027	;# 
   188   000FBB                     CCPR2L          equ	4027	;# 
   189   000FBC                     CCPR2H          equ	4028	;# 
   190   000FBD                     CCP1CON         equ	4029	;# 
   191   000FBD                     ECCP1CON        equ	4029	;# 
   192   000FBE                     CCPR1           equ	4030	;# 
   193   000FBE                     CCPR1L          equ	4030	;# 
   194   000FBF                     CCPR1H          equ	4031	;# 
   195   000FC0                     ADCON2          equ	4032	;# 
   196   000FC1                     ADCON1          equ	4033	;# 
   197   000FC2                     ADCON0          equ	4034	;# 
   198   000FC3                     ADRES           equ	4035	;# 
   199   000FC3                     ADRESL          equ	4035	;# 
   200   000FC4                     ADRESH          equ	4036	;# 
   201   000FC5                     SSPCON2         equ	4037	;# 
   202   000FC6                     SSPCON1         equ	4038	;# 
   203   000FC7                     SSPSTAT         equ	4039	;# 
   204   000FC8                     SSPADD          equ	4040	;# 
   205   000FC9                     SSPBUF          equ	4041	;# 
   206   000FCA                     T2CON           equ	4042	;# 
   207   000FCB                     PR2             equ	4043	;# 
   208   000FCB                     MEMCON          equ	4043	;# 
   209   000FCC                     TMR2            equ	4044	;# 
   210   000FCD                     T1CON           equ	4045	;# 
   211   000FCE                     TMR1            equ	4046	;# 
   212   000FCE                     TMR1L           equ	4046	;# 
   213   000FCF                     TMR1H           equ	4047	;# 
   214   000FD0                     RCON            equ	4048	;# 
   215   000FD1                     WDTCON          equ	4049	;# 
   216   000FD2                     HLVDCON         equ	4050	;# 
   217   000FD2                     LVDCON          equ	4050	;# 
   218   000FD3                     OSCCON          equ	4051	;# 
   219   000FD5                     T0CON           equ	4053	;# 
   220   000FD6                     TMR0            equ	4054	;# 
   221   000FD6                     TMR0L           equ	4054	;# 
   222   000FD7                     TMR0H           equ	4055	;# 
   223   000FD8                     STATUS          equ	4056	;# 
   224   000FD9                     FSR2            equ	4057	;# 
   225   000FD9                     FSR2L           equ	4057	;# 
   226   000FDA                     FSR2H           equ	4058	;# 
   227   000FDB                     PLUSW2          equ	4059	;# 
   228   000FDC                     PREINC2         equ	4060	;# 
   229   000FDD                     POSTDEC2        equ	4061	;# 
   230   000FDE                     POSTINC2        equ	4062	;# 
   231   000FDF                     INDF2           equ	4063	;# 
   232   000FE0                     BSR             equ	4064	;# 
   233   000FE1                     FSR1            equ	4065	;# 
   234   000FE1                     FSR1L           equ	4065	;# 
   235   000FE2                     FSR1H           equ	4066	;# 
   236   000FE3                     PLUSW1          equ	4067	;# 
   237   000FE4                     PREINC1         equ	4068	;# 
   238   000FE5                     POSTDEC1        equ	4069	;# 
   239   000FE6                     POSTINC1        equ	4070	;# 
   240   000FE7                     INDF1           equ	4071	;# 
   241   000FE8                     WREG            equ	4072	;# 
   242   000FE9                     FSR0            equ	4073	;# 
   243   000FE9                     FSR0L           equ	4073	;# 
   244   000FEA                     FSR0H           equ	4074	;# 
   245   000FEB                     PLUSW0          equ	4075	;# 
   246   000FEC                     PREINC0         equ	4076	;# 
   247   000FED                     POSTDEC0        equ	4077	;# 
   248   000FEE                     POSTINC0        equ	4078	;# 
   249   000FEF                     INDF0           equ	4079	;# 
   250   000FF0                     INTCON3         equ	4080	;# 
   251   000FF1                     INTCON2         equ	4081	;# 
   252   000FF2                     INTCON          equ	4082	;# 
   253   000FF3                     PROD            equ	4083	;# 
   254   000FF3                     PRODL           equ	4083	;# 
   255   000FF4                     PRODH           equ	4084	;# 
   256   000FF5                     TABLAT          equ	4085	;# 
   257   000FF6                     TBLPTR          equ	4086	;# 
   258   000FF6                     TBLPTRL         equ	4086	;# 
   259   000FF7                     TBLPTRH         equ	4087	;# 
   260   000FF8                     TBLPTRU         equ	4088	;# 
   261   000FF9                     PCLAT           equ	4089	;# 
   262   000FF9                     PC              equ	4089	;# 
   263   000FF9                     PCL             equ	4089	;# 
   264   000FFA                     PCLATH          equ	4090	;# 
   265   000FFB                     PCLATU          equ	4091	;# 
   266   000FFC                     STKPTR          equ	4092	;# 
   267   000FFD                     TOS             equ	4093	;# 
   268   000FFD                     TOSL            equ	4093	;# 
   269   000FFE                     TOSH            equ	4094	;# 
   270   000FFF                     TOSU            equ	4095	;# 
   271   000F62                     SPPDATA         equ	3938	;# 
   272   000F63                     SPPCFG          equ	3939	;# 
   273   000F64                     SPPEPS          equ	3940	;# 
   274   000F65                     SPPCON          equ	3941	;# 
   275   000F66                     UFRM            equ	3942	;# 
   276   000F66                     UFRML           equ	3942	;# 
   277   000F67                     UFRMH           equ	3943	;# 
   278   000F68                     UIR             equ	3944	;# 
   279   000F69                     UIE             equ	3945	;# 
   280   000F6A                     UEIR            equ	3946	;# 
   281   000F6B                     UEIE            equ	3947	;# 
   282   000F6C                     USTAT           equ	3948	;# 
   283   000F6D                     UCON            equ	3949	;# 
   284   000F6E                     UADDR           equ	3950	;# 
   285   000F6F                     UCFG            equ	3951	;# 
   286   000F70                     UEP0            equ	3952	;# 
   287   000F71                     UEP1            equ	3953	;# 
   288   000F72                     UEP2            equ	3954	;# 
   289   000F73                     UEP3            equ	3955	;# 
   290   000F74                     UEP4            equ	3956	;# 
   291   000F75                     UEP5            equ	3957	;# 
   292   000F76                     UEP6            equ	3958	;# 
   293   000F77                     UEP7            equ	3959	;# 
   294   000F78                     UEP8            equ	3960	;# 
   295   000F79                     UEP9            equ	3961	;# 
   296   000F7A                     UEP10           equ	3962	;# 
   297   000F7B                     UEP11           equ	3963	;# 
   298   000F7C                     UEP12           equ	3964	;# 
   299   000F7D                     UEP13           equ	3965	;# 
   300   000F7E                     UEP14           equ	3966	;# 
   301   000F7F                     UEP15           equ	3967	;# 
   302   000F80                     PORTA           equ	3968	;# 
   303   000F81                     PORTB           equ	3969	;# 
   304   000F82                     PORTC           equ	3970	;# 
   305   000F83                     PORTD           equ	3971	;# 
   306   000F84                     PORTE           equ	3972	;# 
   307   000F89                     LATA            equ	3977	;# 
   308   000F8A                     LATB            equ	3978	;# 
   309   000F8B                     LATC            equ	3979	;# 
   310   000F8C                     LATD            equ	3980	;# 
   311   000F8D                     LATE            equ	3981	;# 
   312   000F92                     TRISA           equ	3986	;# 
   313   000F92                     DDRA            equ	3986	;# 
   314   000F93                     TRISB           equ	3987	;# 
   315   000F93                     DDRB            equ	3987	;# 
   316   000F94                     TRISC           equ	3988	;# 
   317   000F94                     DDRC            equ	3988	;# 
   318   000F95                     TRISD           equ	3989	;# 
   319   000F95                     DDRD            equ	3989	;# 
   320   000F96                     TRISE           equ	3990	;# 
   321   000F96                     DDRE            equ	3990	;# 
   322   000F9B                     OSCTUNE         equ	3995	;# 
   323   000F9D                     PIE1            equ	3997	;# 
   324   000F9E                     PIR1            equ	3998	;# 
   325   000F9F                     IPR1            equ	3999	;# 
   326   000FA0                     PIE2            equ	4000	;# 
   327   000FA1                     PIR2            equ	4001	;# 
   328   000FA2                     IPR2            equ	4002	;# 
   329   000FA6                     EECON1          equ	4006	;# 
   330   000FA7                     EECON2          equ	4007	;# 
   331   000FA8                     EEDATA          equ	4008	;# 
   332   000FA9                     EEADR           equ	4009	;# 
   333   000FAB                     RCSTA           equ	4011	;# 
   334   000FAB                     RCSTA1          equ	4011	;# 
   335   000FAC                     TXSTA           equ	4012	;# 
   336   000FAC                     TXSTA1          equ	4012	;# 
   337   000FAD                     TXREG           equ	4013	;# 
   338   000FAD                     TXREG1          equ	4013	;# 
   339   000FAE                     RCREG           equ	4014	;# 
   340   000FAE                     RCREG1          equ	4014	;# 
   341   000FAF                     SPBRG           equ	4015	;# 
   342   000FAF                     SPBRG1          equ	4015	;# 
   343   000FB0                     SPBRGH          equ	4016	;# 
   344   000FB1                     T3CON           equ	4017	;# 
   345   000FB2                     TMR3            equ	4018	;# 
   346   000FB2                     TMR3L           equ	4018	;# 
   347   000FB3                     TMR3H           equ	4019	;# 
   348   000FB4                     CMCON           equ	4020	;# 
   349   000FB5                     CVRCON          equ	4021	;# 
   350   000FB6                     ECCP1AS         equ	4022	;# 
   351   000FB6                     CCP1AS          equ	4022	;# 
   352   000FB7                     ECCP1DEL        equ	4023	;# 
   353   000FB7                     CCP1DEL         equ	4023	;# 
   354   000FB8                     BAUDCON         equ	4024	;# 
   355   000FB8                     BAUDCTL         equ	4024	;# 
   356   000FBA                     CCP2CON         equ	4026	;# 
   357   000FBB                     CCPR2           equ	4027	;# 
   358   000FBB                     CCPR2L          equ	4027	;# 
   359   000FBC                     CCPR2H          equ	4028	;# 
   360   000FBD                     CCP1CON         equ	4029	;# 
   361   000FBD                     ECCP1CON        equ	4029	;# 
   362   000FBE                     CCPR1           equ	4030	;# 
   363   000FBE                     CCPR1L          equ	4030	;# 
   364   000FBF                     CCPR1H          equ	4031	;# 
   365   000FC0                     ADCON2          equ	4032	;# 
   366   000FC1                     ADCON1          equ	4033	;# 
   367   000FC2                     ADCON0          equ	4034	;# 
   368   000FC3                     ADRES           equ	4035	;# 
   369   000FC3                     ADRESL          equ	4035	;# 
   370   000FC4                     ADRESH          equ	4036	;# 
   371   000FC5                     SSPCON2         equ	4037	;# 
   372   000FC6                     SSPCON1         equ	4038	;# 
   373   000FC7                     SSPSTAT         equ	4039	;# 
   374   000FC8                     SSPADD          equ	4040	;# 
   375   000FC9                     SSPBUF          equ	4041	;# 
   376   000FCA                     T2CON           equ	4042	;# 
   377   000FCB                     PR2             equ	4043	;# 
   378   000FCB                     MEMCON          equ	4043	;# 
   379   000FCC                     TMR2            equ	4044	;# 
   380   000FCD                     T1CON           equ	4045	;# 
   381   000FCE                     TMR1            equ	4046	;# 
   382   000FCE                     TMR1L           equ	4046	;# 
   383   000FCF                     TMR1H           equ	4047	;# 
   384   000FD0                     RCON            equ	4048	;# 
   385   000FD1                     WDTCON          equ	4049	;# 
   386   000FD2                     HLVDCON         equ	4050	;# 
   387   000FD2                     LVDCON          equ	4050	;# 
   388   000FD3                     OSCCON          equ	4051	;# 
   389   000FD5                     T0CON           equ	4053	;# 
   390   000FD6                     TMR0            equ	4054	;# 
   391   000FD6                     TMR0L           equ	4054	;# 
   392   000FD7                     TMR0H           equ	4055	;# 
   393   000FD8                     STATUS          equ	4056	;# 
   394   000FD9                     FSR2            equ	4057	;# 
   395   000FD9                     FSR2L           equ	4057	;# 
   396   000FDA                     FSR2H           equ	4058	;# 
   397   000FDB                     PLUSW2          equ	4059	;# 
   398   000FDC                     PREINC2         equ	4060	;# 
   399   000FDD                     POSTDEC2        equ	4061	;# 
   400   000FDE                     POSTINC2        equ	4062	;# 
   401   000FDF                     INDF2           equ	4063	;# 
   402   000FE0                     BSR             equ	4064	;# 
   403   000FE1                     FSR1            equ	4065	;# 
   404   000FE1                     FSR1L           equ	4065	;# 
   405   000FE2                     FSR1H           equ	4066	;# 
   406   000FE3                     PLUSW1          equ	4067	;# 
   407   000FE4                     PREINC1         equ	4068	;# 
   408   000FE5                     POSTDEC1        equ	4069	;# 
   409   000FE6                     POSTINC1        equ	4070	;# 
   410   000FE7                     INDF1           equ	4071	;# 
   411   000FE8                     WREG            equ	4072	;# 
   412   000FE9                     FSR0            equ	4073	;# 
   413   000FE9                     FSR0L           equ	4073	;# 
   414   000FEA                     FSR0H           equ	4074	;# 
   415   000FEB                     PLUSW0          equ	4075	;# 
   416   000FEC                     PREINC0         equ	4076	;# 
   417   000FED                     POSTDEC0        equ	4077	;# 
   418   000FEE                     POSTINC0        equ	4078	;# 
   419   000FEF                     INDF0           equ	4079	;# 
   420   000FF0                     INTCON3         equ	4080	;# 
   421   000FF1                     INTCON2         equ	4081	;# 
   422   000FF2                     INTCON          equ	4082	;# 
   423   000FF3                     PROD            equ	4083	;# 
   424   000FF3                     PRODL           equ	4083	;# 
   425   000FF4                     PRODH           equ	4084	;# 
   426   000FF5                     TABLAT          equ	4085	;# 
   427   000FF6                     TBLPTR          equ	4086	;# 
   428   000FF6                     TBLPTRL         equ	4086	;# 
   429   000FF7                     TBLPTRH         equ	4087	;# 
   430   000FF8                     TBLPTRU         equ	4088	;# 
   431   000FF9                     PCLAT           equ	4089	;# 
   432   000FF9                     PC              equ	4089	;# 
   433   000FF9                     PCL             equ	4089	;# 
   434   000FFA                     PCLATH          equ	4090	;# 
   435   000FFB                     PCLATU          equ	4091	;# 
   436   000FFC                     STKPTR          equ	4092	;# 
   437   000FFD                     TOS             equ	4093	;# 
   438   000FFD                     TOSL            equ	4093	;# 
   439   000FFE                     TOSH            equ	4094	;# 
   440   000FFF                     TOSU            equ	4095	;# 
   441   000F62                     SPPDATA         equ	3938	;# 
   442   000F63                     SPPCFG          equ	3939	;# 
   443   000F64                     SPPEPS          equ	3940	;# 
   444   000F65                     SPPCON          equ	3941	;# 
   445   000F66                     UFRM            equ	3942	;# 
   446   000F66                     UFRML           equ	3942	;# 
   447   000F67                     UFRMH           equ	3943	;# 
   448   000F68                     UIR             equ	3944	;# 
   449   000F69                     UIE             equ	3945	;# 
   450   000F6A                     UEIR            equ	3946	;# 
   451   000F6B                     UEIE            equ	3947	;# 
   452   000F6C                     USTAT           equ	3948	;# 
   453   000F6D                     UCON            equ	3949	;# 
   454   000F6E                     UADDR           equ	3950	;# 
   455   000F6F                     UCFG            equ	3951	;# 
   456   000F70                     UEP0            equ	3952	;# 
   457   000F71                     UEP1            equ	3953	;# 
   458   000F72                     UEP2            equ	3954	;# 
   459   000F73                     UEP3            equ	3955	;# 
   460   000F74                     UEP4            equ	3956	;# 
   461   000F75                     UEP5            equ	3957	;# 
   462   000F76                     UEP6            equ	3958	;# 
   463   000F77                     UEP7            equ	3959	;# 
   464   000F78                     UEP8            equ	3960	;# 
   465   000F79                     UEP9            equ	3961	;# 
   466   000F7A                     UEP10           equ	3962	;# 
   467   000F7B                     UEP11           equ	3963	;# 
   468   000F7C                     UEP12           equ	3964	;# 
   469   000F7D                     UEP13           equ	3965	;# 
   470   000F7E                     UEP14           equ	3966	;# 
   471   000F7F                     UEP15           equ	3967	;# 
   472   000F80                     PORTA           equ	3968	;# 
   473   000F81                     PORTB           equ	3969	;# 
   474   000F82                     PORTC           equ	3970	;# 
   475   000F83                     PORTD           equ	3971	;# 
   476   000F84                     PORTE           equ	3972	;# 
   477   000F89                     LATA            equ	3977	;# 
   478   000F8A                     LATB            equ	3978	;# 
   479   000F8B                     LATC            equ	3979	;# 
   480   000F8C                     LATD            equ	3980	;# 
   481   000F8D                     LATE            equ	3981	;# 
   482   000F92                     TRISA           equ	3986	;# 
   483   000F92                     DDRA            equ	3986	;# 
   484   000F93                     TRISB           equ	3987	;# 
   485   000F93                     DDRB            equ	3987	;# 
   486   000F94                     TRISC           equ	3988	;# 
   487   000F94                     DDRC            equ	3988	;# 
   488   000F95                     TRISD           equ	3989	;# 
   489   000F95                     DDRD            equ	3989	;# 
   490   000F96                     TRISE           equ	3990	;# 
   491   000F96                     DDRE            equ	3990	;# 
   492   000F9B                     OSCTUNE         equ	3995	;# 
   493   000F9D                     PIE1            equ	3997	;# 
   494   000F9E                     PIR1            equ	3998	;# 
   495   000F9F                     IPR1            equ	3999	;# 
   496   000FA0                     PIE2            equ	4000	;# 
   497   000FA1                     PIR2            equ	4001	;# 
   498   000FA2                     IPR2            equ	4002	;# 
   499   000FA6                     EECON1          equ	4006	;# 
   500   000FA7                     EECON2          equ	4007	;# 
   501   000FA8                     EEDATA          equ	4008	;# 
   502   000FA9                     EEADR           equ	4009	;# 
   503   000FAB                     RCSTA           equ	4011	;# 
   504   000FAB                     RCSTA1          equ	4011	;# 
   505   000FAC                     TXSTA           equ	4012	;# 
   506   000FAC                     TXSTA1          equ	4012	;# 
   507   000FAD                     TXREG           equ	4013	;# 
   508   000FAD                     TXREG1          equ	4013	;# 
   509   000FAE                     RCREG           equ	4014	;# 
   510   000FAE                     RCREG1          equ	4014	;# 
   511   000FAF                     SPBRG           equ	4015	;# 
   512   000FAF                     SPBRG1          equ	4015	;# 
   513   000FB0                     SPBRGH          equ	4016	;# 
   514   000FB1                     T3CON           equ	4017	;# 
   515   000FB2                     TMR3            equ	4018	;# 
   516   000FB2                     TMR3L           equ	4018	;# 
   517   000FB3                     TMR3H           equ	4019	;# 
   518   000FB4                     CMCON           equ	4020	;# 
   519   000FB5                     CVRCON          equ	4021	;# 
   520   000FB6                     ECCP1AS         equ	4022	;# 
   521   000FB6                     CCP1AS          equ	4022	;# 
   522   000FB7                     ECCP1DEL        equ	4023	;# 
   523   000FB7                     CCP1DEL         equ	4023	;# 
   524   000FB8                     BAUDCON         equ	4024	;# 
   525   000FB8                     BAUDCTL         equ	4024	;# 
   526   000FBA                     CCP2CON         equ	4026	;# 
   527   000FBB                     CCPR2           equ	4027	;# 
   528   000FBB                     CCPR2L          equ	4027	;# 
   529   000FBC                     CCPR2H          equ	4028	;# 
   530   000FBD                     CCP1CON         equ	4029	;# 
   531   000FBD                     ECCP1CON        equ	4029	;# 
   532   000FBE                     CCPR1           equ	4030	;# 
   533   000FBE                     CCPR1L          equ	4030	;# 
   534   000FBF                     CCPR1H          equ	4031	;# 
   535   000FC0                     ADCON2          equ	4032	;# 
   536   000FC1                     ADCON1          equ	4033	;# 
   537   000FC2                     ADCON0          equ	4034	;# 
   538   000FC3                     ADRES           equ	4035	;# 
   539   000FC3                     ADRESL          equ	4035	;# 
   540   000FC4                     ADRESH          equ	4036	;# 
   541   000FC5                     SSPCON2         equ	4037	;# 
   542   000FC6                     SSPCON1         equ	4038	;# 
   543   000FC7                     SSPSTAT         equ	4039	;# 
   544   000FC8                     SSPADD          equ	4040	;# 
   545   000FC9                     SSPBUF          equ	4041	;# 
   546   000FCA                     T2CON           equ	4042	;# 
   547   000FCB                     PR2             equ	4043	;# 
   548   000FCB                     MEMCON          equ	4043	;# 
   549   000FCC                     TMR2            equ	4044	;# 
   550   000FCD                     T1CON           equ	4045	;# 
   551   000FCE                     TMR1            equ	4046	;# 
   552   000FCE                     TMR1L           equ	4046	;# 
   553   000FCF                     TMR1H           equ	4047	;# 
   554   000FD0                     RCON            equ	4048	;# 
   555   000FD1                     WDTCON          equ	4049	;# 
   556   000FD2                     HLVDCON         equ	4050	;# 
   557   000FD2                     LVDCON          equ	4050	;# 
   558   000FD3                     OSCCON          equ	4051	;# 
   559   000FD5                     T0CON           equ	4053	;# 
   560   000FD6                     TMR0            equ	4054	;# 
   561   000FD6                     TMR0L           equ	4054	;# 
   562   000FD7                     TMR0H           equ	4055	;# 
   563   000FD8                     STATUS          equ	4056	;# 
   564   000FD9                     FSR2            equ	4057	;# 
   565   000FD9                     FSR2L           equ	4057	;# 
   566   000FDA                     FSR2H           equ	4058	;# 
   567   000FDB                     PLUSW2          equ	4059	;# 
   568   000FDC                     PREINC2         equ	4060	;# 
   569   000FDD                     POSTDEC2        equ	4061	;# 
   570   000FDE                     POSTINC2        equ	4062	;# 
   571   000FDF                     INDF2           equ	4063	;# 
   572   000FE0                     BSR             equ	4064	;# 
   573   000FE1                     FSR1            equ	4065	;# 
   574   000FE1                     FSR1L           equ	4065	;# 
   575   000FE2                     FSR1H           equ	4066	;# 
   576   000FE3                     PLUSW1          equ	4067	;# 
   577   000FE4                     PREINC1         equ	4068	;# 
   578   000FE5                     POSTDEC1        equ	4069	;# 
   579   000FE6                     POSTINC1        equ	4070	;# 
   580   000FE7                     INDF1           equ	4071	;# 
   581   000FE8                     WREG            equ	4072	;# 
   582   000FE9                     FSR0            equ	4073	;# 
   583   000FE9                     FSR0L           equ	4073	;# 
   584   000FEA                     FSR0H           equ	4074	;# 
   585   000FEB                     PLUSW0          equ	4075	;# 
   586   000FEC                     PREINC0         equ	4076	;# 
   587   000FED                     POSTDEC0        equ	4077	;# 
   588   000FEE                     POSTINC0        equ	4078	;# 
   589   000FEF                     INDF0           equ	4079	;# 
   590   000FF0                     INTCON3         equ	4080	;# 
   591   000FF1                     INTCON2         equ	4081	;# 
   592   000FF2                     INTCON          equ	4082	;# 
   593   000FF3                     PROD            equ	4083	;# 
   594   000FF3                     PRODL           equ	4083	;# 
   595   000FF4                     PRODH           equ	4084	;# 
   596   000FF5                     TABLAT          equ	4085	;# 
   597   000FF6                     TBLPTR          equ	4086	;# 
   598   000FF6                     TBLPTRL         equ	4086	;# 
   599   000FF7                     TBLPTRH         equ	4087	;# 
   600   000FF8                     TBLPTRU         equ	4088	;# 
   601   000FF9                     PCLAT           equ	4089	;# 
   602   000FF9                     PC              equ	4089	;# 
   603   000FF9                     PCL             equ	4089	;# 
   604   000FFA                     PCLATH          equ	4090	;# 
   605   000FFB                     PCLATU          equ	4091	;# 
   606   000FFC                     STKPTR          equ	4092	;# 
   607   000FFD                     TOS             equ	4093	;# 
   608   000FFD                     TOSL            equ	4093	;# 
   609   000FFE                     TOSH            equ	4094	;# 
   610   000FFF                     TOSU            equ	4095	;# 
   611   000F62                     SPPDATA         equ	3938	;# 
   612   000F63                     SPPCFG          equ	3939	;# 
   613   000F64                     SPPEPS          equ	3940	;# 
   614   000F65                     SPPCON          equ	3941	;# 
   615   000F66                     UFRM            equ	3942	;# 
   616   000F66                     UFRML           equ	3942	;# 
   617   000F67                     UFRMH           equ	3943	;# 
   618   000F68                     UIR             equ	3944	;# 
   619   000F69                     UIE             equ	3945	;# 
   620   000F6A                     UEIR            equ	3946	;# 
   621   000F6B                     UEIE            equ	3947	;# 
   622   000F6C                     USTAT           equ	3948	;# 
   623   000F6D                     UCON            equ	3949	;# 
   624   000F6E                     UADDR           equ	3950	;# 
   625   000F6F                     UCFG            equ	3951	;# 
   626   000F70                     UEP0            equ	3952	;# 
   627   000F71                     UEP1            equ	3953	;# 
   628   000F72                     UEP2            equ	3954	;# 
   629   000F73                     UEP3            equ	3955	;# 
   630   000F74                     UEP4            equ	3956	;# 
   631   000F75                     UEP5            equ	3957	;# 
   632   000F76                     UEP6            equ	3958	;# 
   633   000F77                     UEP7            equ	3959	;# 
   634   000F78                     UEP8            equ	3960	;# 
   635   000F79                     UEP9            equ	3961	;# 
   636   000F7A                     UEP10           equ	3962	;# 
   637   000F7B                     UEP11           equ	3963	;# 
   638   000F7C                     UEP12           equ	3964	;# 
   639   000F7D                     UEP13           equ	3965	;# 
   640   000F7E                     UEP14           equ	3966	;# 
   641   000F7F                     UEP15           equ	3967	;# 
   642   000F80                     PORTA           equ	3968	;# 
   643   000F81                     PORTB           equ	3969	;# 
   644   000F82                     PORTC           equ	3970	;# 
   645   000F83                     PORTD           equ	3971	;# 
   646   000F84                     PORTE           equ	3972	;# 
   647   000F89                     LATA            equ	3977	;# 
   648   000F8A                     LATB            equ	3978	;# 
   649   000F8B                     LATC            equ	3979	;# 
   650   000F8C                     LATD            equ	3980	;# 
   651   000F8D                     LATE            equ	3981	;# 
   652   000F92                     TRISA           equ	3986	;# 
   653   000F92                     DDRA            equ	3986	;# 
   654   000F93                     TRISB           equ	3987	;# 
   655   000F93                     DDRB            equ	3987	;# 
   656   000F94                     TRISC           equ	3988	;# 
   657   000F94                     DDRC            equ	3988	;# 
   658   000F95                     TRISD           equ	3989	;# 
   659   000F95                     DDRD            equ	3989	;# 
   660   000F96                     TRISE           equ	3990	;# 
   661   000F96                     DDRE            equ	3990	;# 
   662   000F9B                     OSCTUNE         equ	3995	;# 
   663   000F9D                     PIE1            equ	3997	;# 
   664   000F9E                     PIR1            equ	3998	;# 
   665   000F9F                     IPR1            equ	3999	;# 
   666   000FA0                     PIE2            equ	4000	;# 
   667   000FA1                     PIR2            equ	4001	;# 
   668   000FA2                     IPR2            equ	4002	;# 
   669   000FA6                     EECON1          equ	4006	;# 
   670   000FA7                     EECON2          equ	4007	;# 
   671   000FA8                     EEDATA          equ	4008	;# 
   672   000FA9                     EEADR           equ	4009	;# 
   673   000FAB                     RCSTA           equ	4011	;# 
   674   000FAB                     RCSTA1          equ	4011	;# 
   675   000FAC                     TXSTA           equ	4012	;# 
   676   000FAC                     TXSTA1          equ	4012	;# 
   677   000FAD                     TXREG           equ	4013	;# 
   678   000FAD                     TXREG1          equ	4013	;# 
   679   000FAE                     RCREG           equ	4014	;# 
   680   000FAE                     RCREG1          equ	4014	;# 
   681   000FAF                     SPBRG           equ	4015	;# 
   682   000FAF                     SPBRG1          equ	4015	;# 
   683   000FB0                     SPBRGH          equ	4016	;# 
   684   000FB1                     T3CON           equ	4017	;# 
   685   000FB2                     TMR3            equ	4018	;# 
   686   000FB2                     TMR3L           equ	4018	;# 
   687   000FB3                     TMR3H           equ	4019	;# 
   688   000FB4                     CMCON           equ	4020	;# 
   689   000FB5                     CVRCON          equ	4021	;# 
   690   000FB6                     ECCP1AS         equ	4022	;# 
   691   000FB6                     CCP1AS          equ	4022	;# 
   692   000FB7                     ECCP1DEL        equ	4023	;# 
   693   000FB7                     CCP1DEL         equ	4023	;# 
   694   000FB8                     BAUDCON         equ	4024	;# 
   695   000FB8                     BAUDCTL         equ	4024	;# 
   696   000FBA                     CCP2CON         equ	4026	;# 
   697   000FBB                     CCPR2           equ	4027	;# 
   698   000FBB                     CCPR2L          equ	4027	;# 
   699   000FBC                     CCPR2H          equ	4028	;# 
   700   000FBD                     CCP1CON         equ	4029	;# 
   701   000FBD                     ECCP1CON        equ	4029	;# 
   702   000FBE                     CCPR1           equ	4030	;# 
   703   000FBE                     CCPR1L          equ	4030	;# 
   704   000FBF                     CCPR1H          equ	4031	;# 
   705   000FC0                     ADCON2          equ	4032	;# 
   706   000FC1                     ADCON1          equ	4033	;# 
   707   000FC2                     ADCON0          equ	4034	;# 
   708   000FC3                     ADRES           equ	4035	;# 
   709   000FC3                     ADRESL          equ	4035	;# 
   710   000FC4                     ADRESH          equ	4036	;# 
   711   000FC5                     SSPCON2         equ	4037	;# 
   712   000FC6                     SSPCON1         equ	4038	;# 
   713   000FC7                     SSPSTAT         equ	4039	;# 
   714   000FC8                     SSPADD          equ	4040	;# 
   715   000FC9                     SSPBUF          equ	4041	;# 
   716   000FCA                     T2CON           equ	4042	;# 
   717   000FCB                     PR2             equ	4043	;# 
   718   000FCB                     MEMCON          equ	4043	;# 
   719   000FCC                     TMR2            equ	4044	;# 
   720   000FCD                     T1CON           equ	4045	;# 
   721   000FCE                     TMR1            equ	4046	;# 
   722   000FCE                     TMR1L           equ	4046	;# 
   723   000FCF                     TMR1H           equ	4047	;# 
   724   000FD0                     RCON            equ	4048	;# 
   725   000FD1                     WDTCON          equ	4049	;# 
   726   000FD2                     HLVDCON         equ	4050	;# 
   727   000FD2                     LVDCON          equ	4050	;# 
   728   000FD3                     OSCCON          equ	4051	;# 
   729   000FD5                     T0CON           equ	4053	;# 
   730   000FD6                     TMR0            equ	4054	;# 
   731   000FD6                     TMR0L           equ	4054	;# 
   732   000FD7                     TMR0H           equ	4055	;# 
   733   000FD8                     STATUS          equ	4056	;# 
   734   000FD9                     FSR2            equ	4057	;# 
   735   000FD9                     FSR2L           equ	4057	;# 
   736   000FDA                     FSR2H           equ	4058	;# 
   737   000FDB                     PLUSW2          equ	4059	;# 
   738   000FDC                     PREINC2         equ	4060	;# 
   739   000FDD                     POSTDEC2        equ	4061	;# 
   740   000FDE                     POSTINC2        equ	4062	;# 
   741   000FDF                     INDF2           equ	4063	;# 
   742   000FE0                     BSR             equ	4064	;# 
   743   000FE1                     FSR1            equ	4065	;# 
   744   000FE1                     FSR1L           equ	4065	;# 
   745   000FE2                     FSR1H           equ	4066	;# 
   746   000FE3                     PLUSW1          equ	4067	;# 
   747   000FE4                     PREINC1         equ	4068	;# 
   748   000FE5                     POSTDEC1        equ	4069	;# 
   749   000FE6                     POSTINC1        equ	4070	;# 
   750   000FE7                     INDF1           equ	4071	;# 
   751   000FE8                     WREG            equ	4072	;# 
   752   000FE9                     FSR0            equ	4073	;# 
   753   000FE9                     FSR0L           equ	4073	;# 
   754   000FEA                     FSR0H           equ	4074	;# 
   755   000FEB                     PLUSW0          equ	4075	;# 
   756   000FEC                     PREINC0         equ	4076	;# 
   757   000FED                     POSTDEC0        equ	4077	;# 
   758   000FEE                     POSTINC0        equ	4078	;# 
   759   000FEF                     INDF0           equ	4079	;# 
   760   000FF0                     INTCON3         equ	4080	;# 
   761   000FF1                     INTCON2         equ	4081	;# 
   762   000FF2                     INTCON          equ	4082	;# 
   763   000FF3                     PROD            equ	4083	;# 
   764   000FF3                     PRODL           equ	4083	;# 
   765   000FF4                     PRODH           equ	4084	;# 
   766   000FF5                     TABLAT          equ	4085	;# 
   767   000FF6                     TBLPTR          equ	4086	;# 
   768   000FF6                     TBLPTRL         equ	4086	;# 
   769   000FF7                     TBLPTRH         equ	4087	;# 
   770   000FF8                     TBLPTRU         equ	4088	;# 
   771   000FF9                     PCLAT           equ	4089	;# 
   772   000FF9                     PC              equ	4089	;# 
   773   000FF9                     PCL             equ	4089	;# 
   774   000FFA                     PCLATH          equ	4090	;# 
   775   000FFB                     PCLATU          equ	4091	;# 
   776   000FFC                     STKPTR          equ	4092	;# 
   777   000FFD                     TOS             equ	4093	;# 
   778   000FFD                     TOSL            equ	4093	;# 
   779   000FFE                     TOSH            equ	4094	;# 
   780   000FFF                     TOSU            equ	4095	;# 
   781   000F62                     SPPDATA         equ	3938	;# 
   782   000F63                     SPPCFG          equ	3939	;# 
   783   000F64                     SPPEPS          equ	3940	;# 
   784   000F65                     SPPCON          equ	3941	;# 
   785   000F66                     UFRM            equ	3942	;# 
   786   000F66                     UFRML           equ	3942	;# 
   787   000F67                     UFRMH           equ	3943	;# 
   788   000F68                     UIR             equ	3944	;# 
   789   000F69                     UIE             equ	3945	;# 
   790   000F6A                     UEIR            equ	3946	;# 
   791   000F6B                     UEIE            equ	3947	;# 
   792   000F6C                     USTAT           equ	3948	;# 
   793   000F6D                     UCON            equ	3949	;# 
   794   000F6E                     UADDR           equ	3950	;# 
   795   000F6F                     UCFG            equ	3951	;# 
   796   000F70                     UEP0            equ	3952	;# 
   797   000F71                     UEP1            equ	3953	;# 
   798   000F72                     UEP2            equ	3954	;# 
   799   000F73                     UEP3            equ	3955	;# 
   800   000F74                     UEP4            equ	3956	;# 
   801   000F75                     UEP5            equ	3957	;# 
   802   000F76                     UEP6            equ	3958	;# 
   803   000F77                     UEP7            equ	3959	;# 
   804   000F78                     UEP8            equ	3960	;# 
   805   000F79                     UEP9            equ	3961	;# 
   806   000F7A                     UEP10           equ	3962	;# 
   807   000F7B                     UEP11           equ	3963	;# 
   808   000F7C                     UEP12           equ	3964	;# 
   809   000F7D                     UEP13           equ	3965	;# 
   810   000F7E                     UEP14           equ	3966	;# 
   811   000F7F                     UEP15           equ	3967	;# 
   812   000F80                     PORTA           equ	3968	;# 
   813   000F81                     PORTB           equ	3969	;# 
   814   000F82                     PORTC           equ	3970	;# 
   815   000F83                     PORTD           equ	3971	;# 
   816   000F84                     PORTE           equ	3972	;# 
   817   000F89                     LATA            equ	3977	;# 
   818   000F8A                     LATB            equ	3978	;# 
   819   000F8B                     LATC            equ	3979	;# 
   820   000F8C                     LATD            equ	3980	;# 
   821   000F8D                     LATE            equ	3981	;# 
   822   000F92                     TRISA           equ	3986	;# 
   823   000F92                     DDRA            equ	3986	;# 
   824   000F93                     TRISB           equ	3987	;# 
   825   000F93                     DDRB            equ	3987	;# 
   826   000F94                     TRISC           equ	3988	;# 
   827   000F94                     DDRC            equ	3988	;# 
   828   000F95                     TRISD           equ	3989	;# 
   829   000F95                     DDRD            equ	3989	;# 
   830   000F96                     TRISE           equ	3990	;# 
   831   000F96                     DDRE            equ	3990	;# 
   832   000F9B                     OSCTUNE         equ	3995	;# 
   833   000F9D                     PIE1            equ	3997	;# 
   834   000F9E                     PIR1            equ	3998	;# 
   835   000F9F                     IPR1            equ	3999	;# 
   836   000FA0                     PIE2            equ	4000	;# 
   837   000FA1                     PIR2            equ	4001	;# 
   838   000FA2                     IPR2            equ	4002	;# 
   839   000FA6                     EECON1          equ	4006	;# 
   840   000FA7                     EECON2          equ	4007	;# 
   841   000FA8                     EEDATA          equ	4008	;# 
   842   000FA9                     EEADR           equ	4009	;# 
   843   000FAB                     RCSTA           equ	4011	;# 
   844   000FAB                     RCSTA1          equ	4011	;# 
   845   000FAC                     TXSTA           equ	4012	;# 
   846   000FAC                     TXSTA1          equ	4012	;# 
   847   000FAD                     TXREG           equ	4013	;# 
   848   000FAD                     TXREG1          equ	4013	;# 
   849   000FAE                     RCREG           equ	4014	;# 
   850   000FAE                     RCREG1          equ	4014	;# 
   851   000FAF                     SPBRG           equ	4015	;# 
   852   000FAF                     SPBRG1          equ	4015	;# 
   853   000FB0                     SPBRGH          equ	4016	;# 
   854   000FB1                     T3CON           equ	4017	;# 
   855   000FB2                     TMR3            equ	4018	;# 
   856   000FB2                     TMR3L           equ	4018	;# 
   857   000FB3                     TMR3H           equ	4019	;# 
   858   000FB4                     CMCON           equ	4020	;# 
   859   000FB5                     CVRCON          equ	4021	;# 
   860   000FB6                     ECCP1AS         equ	4022	;# 
   861   000FB6                     CCP1AS          equ	4022	;# 
   862   000FB7                     ECCP1DEL        equ	4023	;# 
   863   000FB7                     CCP1DEL         equ	4023	;# 
   864   000FB8                     BAUDCON         equ	4024	;# 
   865   000FB8                     BAUDCTL         equ	4024	;# 
   866   000FBA                     CCP2CON         equ	4026	;# 
   867   000FBB                     CCPR2           equ	4027	;# 
   868   000FBB                     CCPR2L          equ	4027	;# 
   869   000FBC                     CCPR2H          equ	4028	;# 
   870   000FBD                     CCP1CON         equ	4029	;# 
   871   000FBD                     ECCP1CON        equ	4029	;# 
   872   000FBE                     CCPR1           equ	4030	;# 
   873   000FBE                     CCPR1L          equ	4030	;# 
   874   000FBF                     CCPR1H          equ	4031	;# 
   875   000FC0                     ADCON2          equ	4032	;# 
   876   000FC1                     ADCON1          equ	4033	;# 
   877   000FC2                     ADCON0          equ	4034	;# 
   878   000FC3                     ADRES           equ	4035	;# 
   879   000FC3                     ADRESL          equ	4035	;# 
   880   000FC4                     ADRESH          equ	4036	;# 
   881   000FC5                     SSPCON2         equ	4037	;# 
   882   000FC6                     SSPCON1         equ	4038	;# 
   883   000FC7                     SSPSTAT         equ	4039	;# 
   884   000FC8                     SSPADD          equ	4040	;# 
   885   000FC9                     SSPBUF          equ	4041	;# 
   886   000FCA                     T2CON           equ	4042	;# 
   887   000FCB                     PR2             equ	4043	;# 
   888   000FCB                     MEMCON          equ	4043	;# 
   889   000FCC                     TMR2            equ	4044	;# 
   890   000FCD                     T1CON           equ	4045	;# 
   891   000FCE                     TMR1            equ	4046	;# 
   892   000FCE                     TMR1L           equ	4046	;# 
   893   000FCF                     TMR1H           equ	4047	;# 
   894   000FD0                     RCON            equ	4048	;# 
   895   000FD1                     WDTCON          equ	4049	;# 
   896   000FD2                     HLVDCON         equ	4050	;# 
   897   000FD2                     LVDCON          equ	4050	;# 
   898   000FD3                     OSCCON          equ	4051	;# 
   899   000FD5                     T0CON           equ	4053	;# 
   900   000FD6                     TMR0            equ	4054	;# 
   901   000FD6                     TMR0L           equ	4054	;# 
   902   000FD7                     TMR0H           equ	4055	;# 
   903   000FD8                     STATUS          equ	4056	;# 
   904   000FD9                     FSR2            equ	4057	;# 
   905   000FD9                     FSR2L           equ	4057	;# 
   906   000FDA                     FSR2H           equ	4058	;# 
   907   000FDB                     PLUSW2          equ	4059	;# 
   908   000FDC                     PREINC2         equ	4060	;# 
   909   000FDD                     POSTDEC2        equ	4061	;# 
   910   000FDE                     POSTINC2        equ	4062	;# 
   911   000FDF                     INDF2           equ	4063	;# 
   912   000FE0                     BSR             equ	4064	;# 
   913   000FE1                     FSR1            equ	4065	;# 
   914   000FE1                     FSR1L           equ	4065	;# 
   915   000FE2                     FSR1H           equ	4066	;# 
   916   000FE3                     PLUSW1          equ	4067	;# 
   917   000FE4                     PREINC1         equ	4068	;# 
   918   000FE5                     POSTDEC1        equ	4069	;# 
   919   000FE6                     POSTINC1        equ	4070	;# 
   920   000FE7                     INDF1           equ	4071	;# 
   921   000FE8                     WREG            equ	4072	;# 
   922   000FE9                     FSR0            equ	4073	;# 
   923   000FE9                     FSR0L           equ	4073	;# 
   924   000FEA                     FSR0H           equ	4074	;# 
   925   000FEB                     PLUSW0          equ	4075	;# 
   926   000FEC                     PREINC0         equ	4076	;# 
   927   000FED                     POSTDEC0        equ	4077	;# 
   928   000FEE                     POSTINC0        equ	4078	;# 
   929   000FEF                     INDF0           equ	4079	;# 
   930   000FF0                     INTCON3         equ	4080	;# 
   931   000FF1                     INTCON2         equ	4081	;# 
   932   000FF2                     INTCON          equ	4082	;# 
   933   000FF3                     PROD            equ	4083	;# 
   934   000FF3                     PRODL           equ	4083	;# 
   935   000FF4                     PRODH           equ	4084	;# 
   936   000FF5                     TABLAT          equ	4085	;# 
   937   000FF6                     TBLPTR          equ	4086	;# 
   938   000FF6                     TBLPTRL         equ	4086	;# 
   939   000FF7                     TBLPTRH         equ	4087	;# 
   940   000FF8                     TBLPTRU         equ	4088	;# 
   941   000FF9                     PCLAT           equ	4089	;# 
   942   000FF9                     PC              equ	4089	;# 
   943   000FF9                     PCL             equ	4089	;# 
   944   000FFA                     PCLATH          equ	4090	;# 
   945   000FFB                     PCLATU          equ	4091	;# 
   946   000FFC                     STKPTR          equ	4092	;# 
   947   000FFD                     TOS             equ	4093	;# 
   948   000FFD                     TOSL            equ	4093	;# 
   949   000FFE                     TOSH            equ	4094	;# 
   950   000FFF                     TOSU            equ	4095	;# 
   951   000F62                     SPPDATA         equ	3938	;# 
   952   000F63                     SPPCFG          equ	3939	;# 
   953   000F64                     SPPEPS          equ	3940	;# 
   954   000F65                     SPPCON          equ	3941	;# 
   955   000F66                     UFRM            equ	3942	;# 
   956   000F66                     UFRML           equ	3942	;# 
   957   000F67                     UFRMH           equ	3943	;# 
   958   000F68                     UIR             equ	3944	;# 
   959   000F69                     UIE             equ	3945	;# 
   960   000F6A                     UEIR            equ	3946	;# 
   961   000F6B                     UEIE            equ	3947	;# 
   962   000F6C                     USTAT           equ	3948	;# 
   963   000F6D                     UCON            equ	3949	;# 
   964   000F6E                     UADDR           equ	3950	;# 
   965   000F6F                     UCFG            equ	3951	;# 
   966   000F70                     UEP0            equ	3952	;# 
   967   000F71                     UEP1            equ	3953	;# 
   968   000F72                     UEP2            equ	3954	;# 
   969   000F73                     UEP3            equ	3955	;# 
   970   000F74                     UEP4            equ	3956	;# 
   971   000F75                     UEP5            equ	3957	;# 
   972   000F76                     UEP6            equ	3958	;# 
   973   000F77                     UEP7            equ	3959	;# 
   974   000F78                     UEP8            equ	3960	;# 
   975   000F79                     UEP9            equ	3961	;# 
   976   000F7A                     UEP10           equ	3962	;# 
   977   000F7B                     UEP11           equ	3963	;# 
   978   000F7C                     UEP12           equ	3964	;# 
   979   000F7D                     UEP13           equ	3965	;# 
   980   000F7E                     UEP14           equ	3966	;# 
   981   000F7F                     UEP15           equ	3967	;# 
   982   000F80                     PORTA           equ	3968	;# 
   983   000F81                     PORTB           equ	3969	;# 
   984   000F82                     PORTC           equ	3970	;# 
   985   000F83                     PORTD           equ	3971	;# 
   986   000F84                     PORTE           equ	3972	;# 
   987   000F89                     LATA            equ	3977	;# 
   988   000F8A                     LATB            equ	3978	;# 
   989   000F8B                     LATC            equ	3979	;# 
   990   000F8C                     LATD            equ	3980	;# 
   991   000F8D                     LATE            equ	3981	;# 
   992   000F92                     TRISA           equ	3986	;# 
   993   000F92                     DDRA            equ	3986	;# 
   994   000F93                     TRISB           equ	3987	;# 
   995   000F93                     DDRB            equ	3987	;# 
   996   000F94                     TRISC           equ	3988	;# 
   997   000F94                     DDRC            equ	3988	;# 
   998   000F95                     TRISD           equ	3989	;# 
   999   000F95                     DDRD            equ	3989	;# 
  1000   000F96                     TRISE           equ	3990	;# 
  1001   000F96                     DDRE            equ	3990	;# 
  1002   000F9B                     OSCTUNE         equ	3995	;# 
  1003   000F9D                     PIE1            equ	3997	;# 
  1004   000F9E                     PIR1            equ	3998	;# 
  1005   000F9F                     IPR1            equ	3999	;# 
  1006   000FA0                     PIE2            equ	4000	;# 
  1007   000FA1                     PIR2            equ	4001	;# 
  1008   000FA2                     IPR2            equ	4002	;# 
  1009   000FA6                     EECON1          equ	4006	;# 
  1010   000FA7                     EECON2          equ	4007	;# 
  1011   000FA8                     EEDATA          equ	4008	;# 
  1012   000FA9                     EEADR           equ	4009	;# 
  1013   000FAB                     RCSTA           equ	4011	;# 
  1014   000FAB                     RCSTA1          equ	4011	;# 
  1015   000FAC                     TXSTA           equ	4012	;# 
  1016   000FAC                     TXSTA1          equ	4012	;# 
  1017   000FAD                     TXREG           equ	4013	;# 
  1018   000FAD                     TXREG1          equ	4013	;# 
  1019   000FAE                     RCREG           equ	4014	;# 
  1020   000FAE                     RCREG1          equ	4014	;# 
  1021   000FAF                     SPBRG           equ	4015	;# 
  1022   000FAF                     SPBRG1          equ	4015	;# 
  1023   000FB0                     SPBRGH          equ	4016	;# 
  1024   000FB1                     T3CON           equ	4017	;# 
  1025   000FB2                     TMR3            equ	4018	;# 
  1026   000FB2                     TMR3L           equ	4018	;# 
  1027   000FB3                     TMR3H           equ	4019	;# 
  1028   000FB4                     CMCON           equ	4020	;# 
  1029   000FB5                     CVRCON          equ	4021	;# 
  1030   000FB6                     ECCP1AS         equ	4022	;# 
  1031   000FB6                     CCP1AS          equ	4022	;# 
  1032   000FB7                     ECCP1DEL        equ	4023	;# 
  1033   000FB7                     CCP1DEL         equ	4023	;# 
  1034   000FB8                     BAUDCON         equ	4024	;# 
  1035   000FB8                     BAUDCTL         equ	4024	;# 
  1036   000FBA                     CCP2CON         equ	4026	;# 
  1037   000FBB                     CCPR2           equ	4027	;# 
  1038   000FBB                     CCPR2L          equ	4027	;# 
  1039   000FBC                     CCPR2H          equ	4028	;# 
  1040   000FBD                     CCP1CON         equ	4029	;# 
  1041   000FBD                     ECCP1CON        equ	4029	;# 
  1042   000FBE                     CCPR1           equ	4030	;# 
  1043   000FBE                     CCPR1L          equ	4030	;# 
  1044   000FBF                     CCPR1H          equ	4031	;# 
  1045   000FC0                     ADCON2          equ	4032	;# 
  1046   000FC1                     ADCON1          equ	4033	;# 
  1047   000FC2                     ADCON0          equ	4034	;# 
  1048   000FC3                     ADRES           equ	4035	;# 
  1049   000FC3                     ADRESL          equ	4035	;# 
  1050   000FC4                     ADRESH          equ	4036	;# 
  1051   000FC5                     SSPCON2         equ	4037	;# 
  1052   000FC6                     SSPCON1         equ	4038	;# 
  1053   000FC7                     SSPSTAT         equ	4039	;# 
  1054   000FC8                     SSPADD          equ	4040	;# 
  1055   000FC9                     SSPBUF          equ	4041	;# 
  1056   000FCA                     T2CON           equ	4042	;# 
  1057   000FCB                     PR2             equ	4043	;# 
  1058   000FCB                     MEMCON          equ	4043	;# 
  1059   000FCC                     TMR2            equ	4044	;# 
  1060   000FCD                     T1CON           equ	4045	;# 
  1061   000FCE                     TMR1            equ	4046	;# 
  1062   000FCE                     TMR1L           equ	4046	;# 
  1063   000FCF                     TMR1H           equ	4047	;# 
  1064   000FD0                     RCON            equ	4048	;# 
  1065   000FD1                     WDTCON          equ	4049	;# 
  1066   000FD2                     HLVDCON         equ	4050	;# 
  1067   000FD2                     LVDCON          equ	4050	;# 
  1068   000FD3                     OSCCON          equ	4051	;# 
  1069   000FD5                     T0CON           equ	4053	;# 
  1070   000FD6                     TMR0            equ	4054	;# 
  1071   000FD6                     TMR0L           equ	4054	;# 
  1072   000FD7                     TMR0H           equ	4055	;# 
  1073   000FD8                     STATUS          equ	4056	;# 
  1074   000FD9                     FSR2            equ	4057	;# 
  1075   000FD9                     FSR2L           equ	4057	;# 
  1076   000FDA                     FSR2H           equ	4058	;# 
  1077   000FDB                     PLUSW2          equ	4059	;# 
  1078   000FDC                     PREINC2         equ	4060	;# 
  1079   000FDD                     POSTDEC2        equ	4061	;# 
  1080   000FDE                     POSTINC2        equ	4062	;# 
  1081   000FDF                     INDF2           equ	4063	;# 
  1082   000FE0                     BSR             equ	4064	;# 
  1083   000FE1                     FSR1            equ	4065	;# 
  1084   000FE1                     FSR1L           equ	4065	;# 
  1085   000FE2                     FSR1H           equ	4066	;# 
  1086   000FE3                     PLUSW1          equ	4067	;# 
  1087   000FE4                     PREINC1         equ	4068	;# 
  1088   000FE5                     POSTDEC1        equ	4069	;# 
  1089   000FE6                     POSTINC1        equ	4070	;# 
  1090   000FE7                     INDF1           equ	4071	;# 
  1091   000FE8                     WREG            equ	4072	;# 
  1092   000FE9                     FSR0            equ	4073	;# 
  1093   000FE9                     FSR0L           equ	4073	;# 
  1094   000FEA                     FSR0H           equ	4074	;# 
  1095   000FEB                     PLUSW0          equ	4075	;# 
  1096   000FEC                     PREINC0         equ	4076	;# 
  1097   000FED                     POSTDEC0        equ	4077	;# 
  1098   000FEE                     POSTINC0        equ	4078	;# 
  1099   000FEF                     INDF0           equ	4079	;# 
  1100   000FF0                     INTCON3         equ	4080	;# 
  1101   000FF1                     INTCON2         equ	4081	;# 
  1102   000FF2                     INTCON          equ	4082	;# 
  1103   000FF3                     PROD            equ	4083	;# 
  1104   000FF3                     PRODL           equ	4083	;# 
  1105   000FF4                     PRODH           equ	4084	;# 
  1106   000FF5                     TABLAT          equ	4085	;# 
  1107   000FF6                     TBLPTR          equ	4086	;# 
  1108   000FF6                     TBLPTRL         equ	4086	;# 
  1109   000FF7                     TBLPTRH         equ	4087	;# 
  1110   000FF8                     TBLPTRU         equ	4088	;# 
  1111   000FF9                     PCLAT           equ	4089	;# 
  1112   000FF9                     PC              equ	4089	;# 
  1113   000FF9                     PCL             equ	4089	;# 
  1114   000FFA                     PCLATH          equ	4090	;# 
  1115   000FFB                     PCLATU          equ	4091	;# 
  1116   000FFC                     STKPTR          equ	4092	;# 
  1117   000FFD                     TOS             equ	4093	;# 
  1118   000FFD                     TOSL            equ	4093	;# 
  1119   000FFE                     TOSH            equ	4094	;# 
  1120   000FFF                     TOSU            equ	4095	;# 
  1121                           
  1122                           	psect	idataCOMRAM
  1123   000D32                     __pidataCOMRAM:
  1124                           	callstack 0
  1125                           
  1126                           ;initializer for _password
  1127   000D32  31                 	db	49
  1128   000D33  32                 	db	50
  1129   000D34  33                 	db	51
  1130   000D35  34                 	db	52
  1131   000D36  00                 	db	0
  1132                           
  1133                           	psect	smallconst
  1134   000800                     __psmallconst:
  1135                           	callstack 0
  1136   000800  00                 	db	0
  1137   000801                     keypad_getkey@F3225:
  1138                           	callstack 0
  1139   000801  31                 	db	49
  1140   000802  32                 	db	50
  1141   000803  33                 	db	51
  1142   000804  34                 	db	52
  1143   000805  35                 	db	53
  1144   000806  36                 	db	54
  1145   000807  37                 	db	55
  1146   000808  38                 	db	56
  1147   000809  39                 	db	57
  1148   00080A  2A                 	db	42
  1149   00080B  30                 	db	48
  1150   00080C  23                 	db	35
  1151   00080D                     __end_ofkeypad_getkey@F3225:
  1152                           	callstack 0
  1153   007D61                     _TRMT           set	32097
  1154   007CF5                     _RCIF           set	31989
  1155   007D59                     _OERR           set	32089
  1156   007D65                     _TXEN           set	32101
  1157   007D5C                     _CREN           set	32092
  1158   007D5F                     _SPEN           set	32095
  1159   007D64                     _SYNC           set	32100
  1160   007D62                     _BRGH           set	32098
  1161   000FAD                     _TXREG          set	4013
  1162   000FAE                     _RCREG          set	4014
  1163   000FAF                     _SPBRG          set	4015
  1164   000F81                     _PORTBbits      set	3969
  1165   000F8A                     _LATBbits       set	3978
  1166   000F8A                     _LATB           set	3978
  1167   000FF1                     _INTCON2bits    set	4081
  1168   000F93                     _TRISBbits      set	3987
  1169   000F8C                     _LATD           set	3980
  1170   000F95                     _TRISD          set	3989
  1171   000F8B                     _LATCbits       set	3979
  1172   000F94                     _TRISCbits      set	3988
  1173   00080D                     STR_3:
  1174   00080D  20                 	db	32
  1175   00080E  20                 	db	32
  1176   00080F  20                 	db	32
  1177   000810  20                 	db	32
  1178   000811  20                 	db	32
  1179   000812  20                 	db	32
  1180   000813  20                 	db	32
  1181   000814  20                 	db	32
  1182   000815  20                 	db	32
  1183   000816  20                 	db	32
  1184   000817  20                 	db	32
  1185   000818  20                 	db	32
  1186   000819  20                 	db	32
  1187   00081A  20                 	db	32
  1188   00081B  20                 	db	32
  1189   00081C  20                 	db	32
  1190   00081D  00                 	db	0
  1191   00081E                     STR_1:
  1192   00081E  45                 	db	69	;'E'
  1193   00081F  6E                 	db	110	;'n'
  1194   000820  74                 	db	116	;'t'
  1195   000821  65                 	db	101	;'e'
  1196   000822  72                 	db	114	;'r'
  1197   000823  20                 	db	32
  1198   000824  50                 	db	80	;'P'
  1199   000825  61                 	db	97	;'a'
  1200   000826  73                 	db	115	;'s'
  1201   000827  73                 	db	115	;'s'
  1202   000828  77                 	db	119	;'w'
  1203   000829  6F                 	db	111	;'o'
  1204   00082A  72                 	db	114	;'r'
  1205   00082B  64                 	db	100	;'d'
  1206   00082C  3A                 	db	58	;':'
  1207   00082D  00                 	db	0
  1208   00082E                     STR_4:
  1209   00082E  41                 	db	65	;'A'
  1210   00082F  63                 	db	99	;'c'
  1211   000830  63                 	db	99	;'c'
  1212   000831  65                 	db	101	;'e'
  1213   000832  73                 	db	115	;'s'
  1214   000833  73                 	db	115	;'s'
  1215   000834  20                 	db	32
  1216   000835  47                 	db	71	;'G'
  1217   000836  72                 	db	114	;'r'
  1218   000837  61                 	db	97	;'a'
  1219   000838  6E                 	db	110	;'n'
  1220   000839  74                 	db	116	;'t'
  1221   00083A  65                 	db	101	;'e'
  1222   00083B  64                 	db	100	;'d'
  1223   00083C  00                 	db	0
  1224   00083D                     STR_5:
  1225   00083D  41                 	db	65	;'A'
  1226   00083E  63                 	db	99	;'c'
  1227   00083F  63                 	db	99	;'c'
  1228   000840  65                 	db	101	;'e'
  1229   000841  73                 	db	115	;'s'
  1230   000842  73                 	db	115	;'s'
  1231   000843  20                 	db	32
  1232   000844  64                 	db	100	;'d'
  1233   000845  65                 	db	101	;'e'
  1234   000846  6E                 	db	110	;'n'
  1235   000847  69                 	db	105	;'i'
  1236   000848  65                 	db	101	;'e'
  1237   000849  64                 	db	100	;'d'
  1238   00084A  00                 	db	0
  1239   00084B  54                 	db	84	;'T'
  1240   00084C  69                 	db	105	;'i'
  1241   00084D  6D                 	db	109	;'m'
  1242   00084E  65                 	db	101	;'e'
  1243   00084F  3A                 	db	58	;':'
  1244   000850  20                 	db	32
  1245   000851  00                 	db	0
  1246   000852                     STR_2:
  1247   000852  54                 	db	84	;'T'
  1248   000853  69                 	db	105	;'i'
  1249   000854  6D                 	db	109	;'m'
  1250   000855  65                 	db	101	;'e'
  1251   000856  3A                 	db	58	;':'
  1252   000857  00                 	db	0
  1253   00080D                     STR_6           equ	STR_3
  1254   000858  00                 	db	0	; dummy byte at the end
  1255   000002                     __activetblptr  equ	2
  1256                           
  1257                           ; #config settings
  1258                           
  1259                           	psect	cinit
  1260   000C70                     __pcinit:
  1261                           	callstack 0
  1262   000C70                     start_initialization:
  1263                           	callstack 0
  1264   000C70                     __initialization:
  1265                           	callstack 0
  1266                           
  1267                           ; Initialize objects allocated to COMRAM (5 bytes)
  1268                           ; load TBLPTR registers with __pidataCOMRAM
  1269   000C70  0E32               	movlw	low __pidataCOMRAM
  1270   000C72  6EF6               	movwf	tblptrl,c
  1271   000C74  0E0D               	movlw	high __pidataCOMRAM
  1272   000C76  6EF7               	movwf	tblptrh,c
  1273   000C78  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
  1274   000C7A  6EF8               	movwf	tblptru,c
  1275   000C7C  EE00  F034         	lfsr	0,__pdataCOMRAM
  1276   000C80  EE10 F005          	lfsr	1,5
  1277   000C84                     copy_data0:
  1278   000C84  0009               	tblrd		*+
  1279   000C86  CFF5 FFEE          	movff	tablat,postinc0
  1280   000C8A  50E5               	movf	postdec1,w,c
  1281   000C8C  50E1               	movf	fsr1l,w,c
  1282   000C8E  E1FA               	bnz	copy_data0
  1283                           
  1284                           ; Clear objects allocated to COMRAM (7 bytes)
  1285   000C90  EE00  F02D         	lfsr	0,__pbssCOMRAM
  1286   000C94  0E07               	movlw	7
  1287   000C96                     clear_0:
  1288   000C96  6AEE               	clrf	postinc0,c
  1289   000C98  06E8               	decf	wreg,f,c
  1290   000C9A  E1FD               	bnz	clear_0
  1291   000C9C                     end_of_initialization:
  1292                           	callstack 0
  1293   000C9C                     __end_of__initialization:
  1294                           	callstack 0
  1295   000C9C  0E00               	movlw	low (__Lmediumconst shr (0+16))
  1296   000C9E  6EF8               	movwf	tblptru,c
  1297   000CA0  0100               	movlb	0
  1298   000CA2  EF5D  F005         	goto	_main	;jump to C main() function
  1299                           
  1300                           	psect	bssCOMRAM
  1301   00002D                     __pbssCOMRAM:
  1302                           	callstack 0
  1303   00002D                     keypad_password@position:
  1304                           	callstack 0
  1305   00002D                     	ds	1
  1306   00002E                     _index:
  1307                           	callstack 0
  1308   00002E                     	ds	1
  1309   00002F                     _entered:
  1310                           	callstack 0
  1311   00002F                     	ds	5
  1312                           
  1313                           	psect	dataCOMRAM
  1314   000034                     __pdataCOMRAM:
  1315                           	callstack 0
  1316   000034                     _password:
  1317                           	callstack 0
  1318   000034                     	ds	5
  1319                           
  1320                           	psect	cstackCOMRAM
  1321   000001                     __pcstackCOMRAM:
  1322                           	callstack 0
  1323   000001                     ?_strcmp:
  1324                           	callstack 0
  1325   000001                     lcd_data@data:
  1326                           	callstack 0
  1327   000001                     uart_write_char@data:
  1328                           	callstack 0
  1329   000001                     uart_receive_str@buffer:
  1330                           	callstack 0
  1331   000001                     strcmp@l:
  1332                           	callstack 0
  1333   000001                     ??_lcd_cmd:
  1334   000001                     ??_keypad_getkey:
  1335                           
  1336                           ; 1 bytes @ 0x0
  1337   000001                     	ds	1
  1338   000002                     lcd_cmd@cmd:
  1339                           	callstack 0
  1340   000002                     strcmp@r:
  1341                           	callstack 0
  1342   000002                     lcd_str@str:
  1343                           	callstack 0
  1344   000002                     uart_receive_str@i:
  1345                           	callstack 0
  1346   000002                     keypad_getkey@keys:
  1347                           	callstack 0
  1348   000002                     
  1349                           ; 1 bytes @ 0x1
  1350   000002                     	ds	1
  1351   000003                     ??_strcmp:
  1352                           
  1353                           ; 1 bytes @ 0x2
  1354   000003                     	ds	1
  1355   000004                     uart_receive_str@ch:
  1356                           	callstack 0
  1357   000004                     
  1358                           ; 1 bytes @ 0x3
  1359   000004                     	ds	10
  1360   00000E                     keypad_getkey@row:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0xD
  1364   00000E                     	ds	1
  1365   00000F                     ??_keypad_password:
  1366                           
  1367                           ; 1 bytes @ 0xE
  1368   00000F                     	ds	2
  1369   000011                     keypad_password@key:
  1370                           	callstack 0
  1371                           
  1372                           ; 1 bytes @ 0x10
  1373   000011                     	ds	1
  1374   000012                     ??_main:
  1375                           
  1376                           ; 1 bytes @ 0x11
  1377   000012                     	ds	2
  1378   000014                     main@time_buffer:
  1379                           	callstack 0
  1380                           
  1381                           ; 12 bytes @ 0x13
  1382   000014                     	ds	12
  1383   000020                     main@buffer_str:
  1384                           	callstack 0
  1385                           
  1386                           ; 12 bytes @ 0x1F
  1387   000020                     	ds	12
  1388   00002C                     main@auth:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x2B
  1392   00002C                     	ds	1
  1393                           
  1394 ;;
  1395 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1396 ;;
  1397 ;; *************** function _main *****************
  1398 ;; Defined at:
  1399 ;;		line 10 in file "main.c"
  1400 ;; Parameters:    Size  Location     Type
  1401 ;;		None
  1402 ;; Auto vars:     Size  Location     Type
  1403 ;;  buffer_str     12   31[COMRAM] unsigned char [12]
  1404 ;;  time_buffer    12   19[COMRAM] unsigned char [12]
  1405 ;;  auth            1   43[COMRAM] _Bool 
  1406 ;; Return value:  Size  Location     Type
  1407 ;;                  1    wreg      void 
  1408 ;; Registers used:
  1409 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1410 ;; Tracked objects:
  1411 ;;		On entry : 0/0
  1412 ;;		On exit  : 0/0
  1413 ;;		Unchanged: 0/0
  1414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1415 ;;      Params:         0       0       0       0       0       0       0       0       0
  1416 ;;      Locals:        25       0       0       0       0       0       0       0       0
  1417 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1418 ;;      Totals:        27       0       0       0       0       0       0       0       0
  1419 ;;Total ram usage:       27 bytes
  1420 ;; Hardware stack levels required when called: 3
  1421 ;; This function calls:
  1422 ;;		_keypad_init
  1423 ;;		_keypad_password
  1424 ;;		_lcd_cmd
  1425 ;;		_lcd_init
  1426 ;;		_lcd_str
  1427 ;;		_uart_init
  1428 ;;		_uart_receive_str
  1429 ;;		_uart_write_char
  1430 ;; This function is called by:
  1431 ;;		Startup code after reset
  1432 ;; This function uses a non-reentrant model
  1433 ;;
  1434                           
  1435                           	psect	text0
  1436   000ABA                     __ptext0:
  1437                           	callstack 0
  1438   000ABA                     _main:
  1439                           	callstack 28
  1440   000ABA                     
  1441                           ;main.c: 13:     char buffer_str[12];;main.c: 14:     TRISCbits.TRISC2=0;
  1442   000ABA  9494               	bcf	148,2,c	;volatile
  1443   000ABC                     
  1444                           ;main.c: 16:     lcd_init();
  1445   000ABC  EC53  F006         	call	_lcd_init	;wreg free
  1446   000AC0                     
  1447                           ;main.c: 17:     keypad_init();
  1448   000AC0  EC80  F006         	call	_keypad_init	;wreg free
  1449   000AC4                     
  1450                           ;main.c: 18:     uart_init();
  1451   000AC4  EC8A  F006         	call	_uart_init	;wreg free
  1452   000AC8                     
  1453                           ;main.c: 20:     lcd_cmd(0x80);
  1454   000AC8  0E80               	movlw	128
  1455   000ACA  EC66  F006         	call	_lcd_cmd
  1456   000ACE                     
  1457                           ;main.c: 21:     lcd_str("Enter Password:");
  1458   000ACE  0E1E               	movlw	low STR_1
  1459   000AD0  6E02               	movwf	lcd_str@str^0,c
  1460   000AD2  5002               	movf	lcd_str@str^0,w,c
  1461   000AD4  A4D8               	btfss	status,2,c
  1462   000AD6  0E08               	movlw	high __smallconst
  1463   000AD8  6E03               	movwf	(lcd_str@str+1)^0,c
  1464   000ADA  ECE6  F005         	call	_lcd_str	;wreg free
  1465   000ADE                     
  1466                           ;main.c: 22:     lcd_cmd(0xC0);
  1467   000ADE  0EC0               	movlw	192
  1468   000AE0  EC66  F006         	call	_lcd_cmd
  1469   000AE4                     
  1470                           ;main.c: 23:     LATCbits.LATC2=0;
  1471   000AE4  948B               	bcf	139,2,c	;volatile
  1472   000AE6                     l1237:
  1473                           
  1474                           ;main.c: 26:     {;main.c: 27:         auth = keypad_password();
  1475   000AE6  ECD0  F004         	call	_keypad_password	;wreg free
  1476   000AEA  6E2C               	movwf	main@auth^0,c
  1477   000AEC                     
  1478                           ;main.c: 28:         if (auth)
  1479   000AEC  502C               	movf	main@auth^0,w,c
  1480   000AEE  B4D8               	btfsc	status,2,c
  1481   000AF0  EF7C  F005         	goto	u371
  1482   000AF4  EF7E  F005         	goto	u370
  1483   000AF8                     u371:
  1484   000AF8  EF73  F005         	goto	l1237
  1485   000AFC                     u370:
  1486   000AFC                     
  1487                           ;main.c: 29:         {;main.c: 30:            LATCbits.LATC2=1;
  1488   000AFC  848B               	bsf	139,2,c	;volatile
  1489   000AFE                     
  1490                           ;main.c: 31:             _delay((unsigned long)((100)*(20000000/4000.0)));
  1491   000AFE  0E03               	movlw	3
  1492   000B00  6E13               	movwf	(??_main+1)^0,c
  1493   000B02  0E8A               	movlw	138
  1494   000B04  6E12               	movwf	??_main^0,c
  1495   000B06  0E56               	movlw	86
  1496   000B08                     u387:
  1497   000B08  2EE8               	decfsz	wreg,f,c
  1498   000B0A  D7FE               	bra	u387
  1499   000B0C  2E12               	decfsz	??_main^0,f,c
  1500   000B0E  D7FC               	bra	u387
  1501   000B10  2E13               	decfsz	(??_main+1)^0,f,c
  1502   000B12  D7FA               	bra	u387
  1503   000B14                     
  1504                           ;main.c: 36:     lcd_cmd(0x01);
  1505   000B14  0E01               	movlw	1
  1506   000B16  EC66  F006         	call	_lcd_cmd
  1507                           
  1508                           ;main.c: 37:     lcd_cmd(0x80);
  1509   000B1A  0E80               	movlw	128
  1510   000B1C  EC66  F006         	call	_lcd_cmd
  1511   000B20                     
  1512                           ;main.c: 38:     lcd_str("Time:");
  1513   000B20  0E52               	movlw	low STR_2
  1514   000B22  6E02               	movwf	lcd_str@str^0,c
  1515   000B24  5002               	movf	lcd_str@str^0,w,c
  1516   000B26  A4D8               	btfss	status,2,c
  1517   000B28  0E08               	movlw	high __smallconst
  1518   000B2A  6E03               	movwf	(lcd_str@str+1)^0,c
  1519   000B2C  ECE6  F005         	call	_lcd_str	;wreg free
  1520   000B30                     l1249:
  1521                           
  1522                           ;main.c: 41:     {;main.c: 42:         lcd_cmd(0x86);
  1523   000B30  0E86               	movlw	134
  1524   000B32  EC66  F006         	call	_lcd_cmd
  1525   000B36                     
  1526                           ;main.c: 44:         lcd_cmd(0x86);
  1527   000B36  0E86               	movlw	134
  1528   000B38  EC66  F006         	call	_lcd_cmd
  1529   000B3C                     
  1530                           ;main.c: 45:         uart_receive_str(buffer_str);
  1531   000B3C  0E20               	movlw	low main@buffer_str
  1532   000B3E  6E01               	movwf	uart_receive_str@buffer^0,c
  1533   000B40  EC15  F006         	call	_uart_receive_str	;wreg free
  1534   000B44                     
  1535                           ;main.c: 46:         lcd_str(buffer_str);
  1536   000B44  0E20               	movlw	low main@buffer_str
  1537   000B46  6E02               	movwf	lcd_str@str^0,c
  1538   000B48  6A03               	clrf	(lcd_str@str+1)^0,c
  1539   000B4A  ECE6  F005         	call	_lcd_str	;wreg free
  1540   000B4E                     
  1541                           ;main.c: 47:         _delay((unsigned long)((500)*(20000000/4000.0)));
  1542   000B4E  0E0D               	movlw	13
  1543   000B50  6E13               	movwf	(??_main+1)^0,c
  1544   000B52  0EAF               	movlw	175
  1545   000B54  6E12               	movwf	??_main^0,c
  1546   000B56  0EB6               	movlw	182
  1547   000B58                     u397:
  1548   000B58  2EE8               	decfsz	wreg,f,c
  1549   000B5A  D7FE               	bra	u397
  1550   000B5C  2E12               	decfsz	??_main^0,f,c
  1551   000B5E  D7FC               	bra	u397
  1552   000B60  2E13               	decfsz	(??_main+1)^0,f,c
  1553   000B62  D7FA               	bra	u397
  1554   000B64  D000               	nop2	
  1555   000B66  EF98  F005         	goto	l1249
  1556   000B6A  EF00  F000         	goto	start
  1557   000B6E                     __end_of_main:
  1558                           	callstack 0
  1559                           
  1560 ;; *************** function _uart_write_char *****************
  1561 ;; Defined at:
  1562 ;;		line 27 in file "uart.c"
  1563 ;; Parameters:    Size  Location     Type
  1564 ;;  data            1    wreg     unsigned char 
  1565 ;; Auto vars:     Size  Location     Type
  1566 ;;  data            1    0[COMRAM] unsigned char 
  1567 ;; Return value:  Size  Location     Type
  1568 ;;                  1    wreg      void 
  1569 ;; Registers used:
  1570 ;;		wreg
  1571 ;; Tracked objects:
  1572 ;;		On entry : 0/0
  1573 ;;		On exit  : 0/0
  1574 ;;		Unchanged: 0/0
  1575 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1576 ;;      Params:         0       0       0       0       0       0       0       0       0
  1577 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1578 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1579 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1580 ;;Total ram usage:        1 bytes
  1581 ;; Hardware stack levels used: 1
  1582 ;; This function calls:
  1583 ;;		Nothing
  1584 ;; This function is called by:
  1585 ;;		_main
  1586 ;;		_login
  1587 ;; This function uses a non-reentrant model
  1588 ;;
  1589                           
  1590                           	psect	text1
  1591   000CEA                     __ptext1:
  1592                           	callstack 0
  1593   000CEA                     _uart_write_char:
  1594                           	callstack 30
  1595                           
  1596                           ;incstack = 0
  1597                           ;uart_write_char@data stored from wreg
  1598   000CEA  6E01               	movwf	uart_write_char@data^0,c
  1599   000CEC                     l139:
  1600                           
  1601                           ;uart.c: 29:     while (!TRMT)
  1602   000CEC  A2AC               	btfss	4012,1,c	;volatile
  1603   000CEE  EF7B  F006         	goto	u211
  1604   000CF2  EF7D  F006         	goto	u210
  1605   000CF6                     u211:
  1606   000CF6  EF76  F006         	goto	l139
  1607   000CFA                     u210:
  1608   000CFA                     
  1609                           ;uart.c: 31:     TXREG = data;
  1610   000CFA  C001  FFAD         	movff	uart_write_char@data,4013	;volatile
  1611   000CFE  0012               	return		;funcret
  1612   000D00                     __end_of_uart_write_char:
  1613                           	callstack 0
  1614                           
  1615 ;; *************** function _uart_receive_str *****************
  1616 ;; Defined at:
  1617 ;;		line 34 in file "uart.c"
  1618 ;; Parameters:    Size  Location     Type
  1619 ;;  buffer          1    0[COMRAM] PTR unsigned char 
  1620 ;;		 -> login@buffer(12), main@buffer_str(12), 
  1621 ;; Auto vars:     Size  Location     Type
  1622 ;;  i               2    1[COMRAM] int 
  1623 ;;  ch              1    3[COMRAM] unsigned char 
  1624 ;; Return value:  Size  Location     Type
  1625 ;;                  1    wreg      void 
  1626 ;; Registers used:
  1627 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  1628 ;; Tracked objects:
  1629 ;;		On entry : 0/0
  1630 ;;		On exit  : 0/0
  1631 ;;		Unchanged: 0/0
  1632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1633 ;;      Params:         1       0       0       0       0       0       0       0       0
  1634 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1635 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1636 ;;      Totals:         4       0       0       0       0       0       0       0       0
  1637 ;;Total ram usage:        4 bytes
  1638 ;; Hardware stack levels used: 1
  1639 ;; This function calls:
  1640 ;;		Nothing
  1641 ;; This function is called by:
  1642 ;;		_main
  1643 ;;		_login
  1644 ;; This function uses a non-reentrant model
  1645 ;;
  1646                           
  1647                           	psect	text2
  1648   000C2A                     __ptext2:
  1649                           	callstack 0
  1650   000C2A                     _uart_receive_str:
  1651                           	callstack 30
  1652   000C2A                     
  1653                           ;uart.c: 34: void uart_receive_str(char *buffer);uart.c: 35: {;uart.c: 36:     char ch;;
      +                          uart.c: 37:     int i = 0;
  1654   000C2A  0E00               	movlw	0
  1655   000C2C  6E03               	movwf	(uart_receive_str@i+1)^0,c
  1656   000C2E  0E00               	movlw	0
  1657   000C30  6E02               	movwf	uart_receive_str@i^0,c
  1658   000C32                     l146:
  1659                           
  1660                           ;uart.c: 40:         while (!RCIF)
  1661   000C32  AA9E               	btfss	3998,5,c	;volatile
  1662   000C34  EF1E  F006         	goto	u351
  1663   000C38  EF20  F006         	goto	u350
  1664   000C3C                     u351:
  1665   000C3C  EF19  F006         	goto	l146
  1666   000C40                     u350:
  1667   000C40                     
  1668                           ;uart.c: 42:         ch = RCREG;
  1669   000C40  CFAE F004          	movff	4014,uart_receive_str@ch	;volatile
  1670   000C44                     
  1671                           ;uart.c: 44:         if (ch == '\n')
  1672   000C44  0E0A               	movlw	10
  1673   000C46  1804               	xorwf	uart_receive_str@ch^0,w,c
  1674   000C48  A4D8               	btfss	status,2,c
  1675   000C4A  EF29  F006         	goto	u361
  1676   000C4E  EF2B  F006         	goto	u360
  1677   000C52                     u361:
  1678   000C52  EF2D  F006         	goto	l1217
  1679   000C56                     u360:
  1680   000C56  EF37  F006         	goto	l152
  1681   000C5A                     l1217:
  1682                           
  1683                           ;uart.c: 48:         buffer[i++] = ch;
  1684   000C5A  5001               	movf	uart_receive_str@buffer^0,w,c
  1685   000C5C  2402               	addwf	uart_receive_str@i^0,w,c
  1686   000C5E  6ED9               	movwf	fsr2l,c
  1687   000C60  6ADA               	clrf	fsr2h,c
  1688   000C62  C004  FFDF         	movff	uart_receive_str@ch,indf2
  1689   000C66  4A02               	infsnz	uart_receive_str@i^0,f,c
  1690   000C68  2A03               	incf	(uart_receive_str@i+1)^0,f,c
  1691   000C6A  EF19  F006         	goto	l146
  1692   000C6E                     l152:
  1693   000C6E  0012               	return		;funcret
  1694   000C70                     __end_of_uart_receive_str:
  1695                           	callstack 0
  1696                           
  1697 ;; *************** function _uart_init *****************
  1698 ;; Defined at:
  1699 ;;		line 5 in file "uart.c"
  1700 ;; Parameters:    Size  Location     Type
  1701 ;;		None
  1702 ;; Auto vars:     Size  Location     Type
  1703 ;;		None
  1704 ;; Return value:  Size  Location     Type
  1705 ;;                  1    wreg      void 
  1706 ;; Registers used:
  1707 ;;		wreg, status,2
  1708 ;; Tracked objects:
  1709 ;;		On entry : 0/0
  1710 ;;		On exit  : 0/0
  1711 ;;		Unchanged: 0/0
  1712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1713 ;;      Params:         0       0       0       0       0       0       0       0       0
  1714 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1715 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1716 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1717 ;;Total ram usage:        0 bytes
  1718 ;; Hardware stack levels used: 1
  1719 ;; This function calls:
  1720 ;;		Nothing
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;;		_login
  1724 ;; This function uses a non-reentrant model
  1725 ;;
  1726                           
  1727                           	psect	text3
  1728   000D14                     __ptext3:
  1729                           	callstack 0
  1730   000D14                     _uart_init:
  1731                           	callstack 30
  1732   000D14                     
  1733                           ;uart.c: 7:     SPBRG = 77;
  1734   000D14  0E4D               	movlw	77
  1735   000D16  6EAF               	movwf	175,c	;volatile
  1736   000D18                     
  1737                           ;uart.c: 8:     BRGH = 1;
  1738   000D18  84AC               	bsf	4012,2,c	;volatile
  1739   000D1A                     
  1740                           ;uart.c: 9:     SYNC = 0;
  1741   000D1A  98AC               	bcf	4012,4,c	;volatile
  1742   000D1C                     
  1743                           ;uart.c: 10:     SPEN = 1;
  1744   000D1C  8EAB               	bsf	4011,7,c	;volatile
  1745   000D1E                     
  1746                           ;uart.c: 11:     CREN = 1;
  1747   000D1E  88AB               	bsf	4011,4,c	;volatile
  1748   000D20                     
  1749                           ;uart.c: 12:     TXEN = 1;
  1750   000D20  8AAC               	bsf	4012,5,c	;volatile
  1751   000D22  0012               	return		;funcret
  1752   000D24                     __end_of_uart_init:
  1753                           	callstack 0
  1754                           
  1755 ;; *************** function _lcd_init *****************
  1756 ;; Defined at:
  1757 ;;		line 3 in file "lcd.c"
  1758 ;; Parameters:    Size  Location     Type
  1759 ;;		None
  1760 ;; Auto vars:     Size  Location     Type
  1761 ;;		None
  1762 ;; Return value:  Size  Location     Type
  1763 ;;                  1    wreg      void 
  1764 ;; Registers used:
  1765 ;;		wreg, status,2, cstack
  1766 ;; Tracked objects:
  1767 ;;		On entry : 0/0
  1768 ;;		On exit  : 0/0
  1769 ;;		Unchanged: 0/0
  1770 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1771 ;;      Params:         0       0       0       0       0       0       0       0       0
  1772 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1773 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1774 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1775 ;;Total ram usage:        0 bytes
  1776 ;; Hardware stack levels used: 1
  1777 ;; Hardware stack levels required when called: 1
  1778 ;; This function calls:
  1779 ;;		_lcd_cmd
  1780 ;; This function is called by:
  1781 ;;		_main
  1782 ;; This function uses a non-reentrant model
  1783 ;;
  1784                           
  1785                           	psect	text4
  1786   000CA6                     __ptext4:
  1787                           	callstack 0
  1788   000CA6                     _lcd_init:
  1789                           	callstack 29
  1790   000CA6                     
  1791                           ;lcd.c: 4:     TRISD = 0x00;
  1792   000CA6  6A95               	clrf	149,c	;volatile
  1793                           
  1794                           ;lcd.c: 5:     TRISCbits.TRISC0 = 0;
  1795   000CA8  9094               	bcf	148,0,c	;volatile
  1796                           
  1797                           ;lcd.c: 7:     TRISCbits.TRISC1 = 0;
  1798   000CAA  9294               	bcf	148,1,c	;volatile
  1799   000CAC                     
  1800                           ;lcd.c: 10:     lcd_cmd(0x38);
  1801   000CAC  0E38               	movlw	56
  1802   000CAE  EC66  F006         	call	_lcd_cmd
  1803                           
  1804                           ;lcd.c: 11:     lcd_cmd(0x0C);
  1805   000CB2  0E0C               	movlw	12
  1806   000CB4  EC66  F006         	call	_lcd_cmd
  1807                           
  1808                           ;lcd.c: 12:     lcd_cmd(0x01);
  1809   000CB8  0E01               	movlw	1
  1810   000CBA  EC66  F006         	call	_lcd_cmd
  1811                           
  1812                           ;lcd.c: 14:     lcd_cmd(0x06);
  1813   000CBE  0E06               	movlw	6
  1814   000CC0  EC66  F006         	call	_lcd_cmd
  1815                           
  1816                           ;lcd.c: 15:     lcd_cmd(0x80);
  1817   000CC4  0E80               	movlw	128
  1818   000CC6  EC66  F006         	call	_lcd_cmd
  1819   000CCA  0012               	return		;funcret
  1820   000CCC                     __end_of_lcd_init:
  1821                           	callstack 0
  1822                           
  1823 ;; *************** function _keypad_password *****************
  1824 ;; Defined at:
  1825 ;;		line 10 in file "password.c"
  1826 ;; Parameters:    Size  Location     Type
  1827 ;;		None
  1828 ;; Auto vars:     Size  Location     Type
  1829 ;;  key             1   16[COMRAM] unsigned char 
  1830 ;; Return value:  Size  Location     Type
  1831 ;;                  1    wreg      _Bool 
  1832 ;; Registers used:
  1833 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1834 ;; Tracked objects:
  1835 ;;		On entry : 0/0
  1836 ;;		On exit  : 0/0
  1837 ;;		Unchanged: 0/0
  1838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1839 ;;      Params:         0       0       0       0       0       0       0       0       0
  1840 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1841 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1842 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1843 ;;Total ram usage:        3 bytes
  1844 ;; Hardware stack levels used: 1
  1845 ;; Hardware stack levels required when called: 2
  1846 ;; This function calls:
  1847 ;;		_keypad_getkey
  1848 ;;		_lcd_cmd
  1849 ;;		_lcd_data
  1850 ;;		_lcd_str
  1851 ;;		_strcmp
  1852 ;; This function is called by:
  1853 ;;		_main
  1854 ;; This function uses a non-reentrant model
  1855 ;;
  1856                           
  1857                           	psect	text5
  1858   0009A0                     __ptext5:
  1859                           	callstack 0
  1860   0009A0                     _keypad_password:
  1861                           	callstack 28
  1862   0009A0                     
  1863                           ;password.c: 12:     static unsigned char position = 0;;password.c: 13:     char key = k
      +                          eypad_getkey();
  1864   0009A0  EC2D  F004         	call	_keypad_getkey	;wreg free
  1865   0009A4  6E11               	movwf	keypad_password@key^0,c
  1866   0009A6                     
  1867                           ;password.c: 15:     if (key)
  1868   0009A6  5011               	movf	keypad_password@key^0,w,c
  1869   0009A8  B4D8               	btfsc	status,2,c
  1870   0009AA  EFD9  F004         	goto	u301
  1871   0009AE  EFDB  F004         	goto	u300
  1872   0009B2                     u301:
  1873   0009B2  EF5C  F005         	goto	l177
  1874   0009B6                     u300:
  1875   0009B6                     
  1876                           ;password.c: 16:     {;password.c: 17:         if (key == '*')
  1877   0009B6  0E2A               	movlw	42
  1878   0009B8  1811               	xorwf	keypad_password@key^0,w,c
  1879   0009BA  A4D8               	btfss	status,2,c
  1880   0009BC  EFE2  F004         	goto	u311
  1881   0009C0  EFE4  F004         	goto	u310
  1882   0009C4                     u311:
  1883   0009C4  EFF7  F004         	goto	l1167
  1884   0009C8                     u310:
  1885   0009C8                     
  1886                           ;password.c: 18:         {;password.c: 19:             index = 0;
  1887   0009C8  6A2E               	clrf	_index^0,c
  1888                           
  1889                           ;password.c: 20:             position = 0;
  1890   0009CA  6A2D               	clrf	keypad_password@position^0,c
  1891   0009CC                     
  1892                           ;password.c: 21:             lcd_cmd(0xC0);
  1893   0009CC  0EC0               	movlw	192
  1894   0009CE  EC66  F006         	call	_lcd_cmd
  1895   0009D2                     
  1896                           ;password.c: 22:             lcd_str("                ");
  1897   0009D2  0E0D               	movlw	low STR_3
  1898   0009D4  6E02               	movwf	lcd_str@str^0,c
  1899   0009D6  5002               	movf	lcd_str@str^0,w,c
  1900   0009D8  A4D8               	btfss	status,2,c
  1901   0009DA  0E08               	movlw	high __smallconst
  1902   0009DC  6E03               	movwf	(lcd_str@str+1)^0,c
  1903   0009DE  ECE6  F005         	call	_lcd_str	;wreg free
  1904   0009E2                     
  1905                           ;password.c: 23:             lcd_cmd(0xC0);
  1906   0009E2  0EC0               	movlw	192
  1907   0009E4  EC66  F006         	call	_lcd_cmd
  1908   0009E8                     l1163:
  1909                           
  1910                           ;password.c: 24:             return 0;
  1911   0009E8  0E00               	movlw	0
  1912   0009EA  EF5C  F005         	goto	l177
  1913   0009EE                     l1167:
  1914                           
  1915                           ;password.c: 26:         if (key == '#')
  1916   0009EE  0E23               	movlw	35
  1917   0009F0  1811               	xorwf	keypad_password@key^0,w,c
  1918   0009F2  A4D8               	btfss	status,2,c
  1919   0009F4  EFFE  F004         	goto	u321
  1920   0009F8  EF00  F005         	goto	u320
  1921   0009FC                     u321:
  1922   0009FC  EF48  F005         	goto	l1199
  1923   000A00                     u320:
  1924   000A00                     
  1925                           ;password.c: 27:         {;password.c: 28:             entered[index] = '\0';
  1926   000A00  502E               	movf	_index^0,w,c
  1927   000A02  0F2F               	addlw	low _entered
  1928   000A04  6ED9               	movwf	fsr2l,c
  1929   000A06  6ADA               	clrf	fsr2h,c
  1930   000A08  6ADF               	clrf	indf2,c
  1931   000A0A                     
  1932                           ;password.c: 29:             lcd_cmd(0xC0);
  1933   000A0A  0EC0               	movlw	192
  1934   000A0C  EC66  F006         	call	_lcd_cmd
  1935   000A10                     
  1936                           ;password.c: 30:             if (strcmp(entered, password) == 0) {
  1937   000A10  0E2F               	movlw	low _entered
  1938   000A12  6E01               	movwf	strcmp@l^0,c
  1939   000A14  0E34               	movlw	low _password
  1940   000A16  6E02               	movwf	strcmp@r^0,c
  1941   000A18  ECB7  F005         	call	_strcmp	;wreg free
  1942   000A1C  5001               	movf	?_strcmp^0,w,c
  1943   000A1E  1002               	iorwf	(?_strcmp+1)^0,w,c
  1944   000A20  A4D8               	btfss	status,2,c
  1945   000A22  EF15  F005         	goto	u331
  1946   000A26  EF17  F005         	goto	u330
  1947   000A2A                     u331:
  1948   000A2A  EF22  F005         	goto	l1183
  1949   000A2E                     u330:
  1950   000A2E                     
  1951                           ;password.c: 31:                 lcd_str("Access Granted");
  1952   000A2E  0E2E               	movlw	low STR_4
  1953   000A30  6E02               	movwf	lcd_str@str^0,c
  1954   000A32  5002               	movf	lcd_str@str^0,w,c
  1955   000A34  A4D8               	btfss	status,2,c
  1956   000A36  0E08               	movlw	high __smallconst
  1957   000A38  6E03               	movwf	(lcd_str@str+1)^0,c
  1958   000A3A  ECE6  F005         	call	_lcd_str	;wreg free
  1959   000A3E                     
  1960                           ;password.c: 32:                 return 1;
  1961   000A3E  0E01               	movlw	1
  1962   000A40  EF5C  F005         	goto	l177
  1963   000A44                     l1183:
  1964                           
  1965                           ;password.c: 34:                 lcd_str("Access denied");
  1966   000A44  0E3D               	movlw	low STR_5
  1967   000A46  6E02               	movwf	lcd_str@str^0,c
  1968   000A48  5002               	movf	lcd_str@str^0,w,c
  1969   000A4A  A4D8               	btfss	status,2,c
  1970   000A4C  0E08               	movlw	high __smallconst
  1971   000A4E  6E03               	movwf	(lcd_str@str+1)^0,c
  1972   000A50  ECE6  F005         	call	_lcd_str	;wreg free
  1973   000A54                     
  1974                           ;password.c: 37:             _delay((unsigned long)((2000)*(20000000/4000.0)));
  1975   000A54  0E33               	movlw	51
  1976   000A56  6E10               	movwf	(??_keypad_password+1)^0,c
  1977   000A58  0EBB               	movlw	187
  1978   000A5A  6E0F               	movwf	??_keypad_password^0,c
  1979   000A5C  0EE0               	movlw	224
  1980   000A5E                     u407:
  1981   000A5E  2EE8               	decfsz	wreg,f,c
  1982   000A60  D7FE               	bra	u407
  1983   000A62  2E0F               	decfsz	??_keypad_password^0,f,c
  1984   000A64  D7FC               	bra	u407
  1985   000A66  2E10               	decfsz	(??_keypad_password+1)^0,f,c
  1986   000A68  D7FA               	bra	u407
  1987   000A6A                     
  1988                           ;password.c: 38:             index = 0;
  1989   000A6A  6A2E               	clrf	_index^0,c
  1990   000A6C                     
  1991                           ;password.c: 39:             position = 0;
  1992   000A6C  6A2D               	clrf	keypad_password@position^0,c
  1993   000A6E                     
  1994                           ;password.c: 40:             lcd_cmd(0xC0);
  1995   000A6E  0EC0               	movlw	192
  1996   000A70  EC66  F006         	call	_lcd_cmd
  1997   000A74                     
  1998                           ;password.c: 41:             lcd_str("                ");
  1999   000A74  0E0D               	movlw	low STR_3
  2000   000A76  6E02               	movwf	lcd_str@str^0,c
  2001   000A78  5002               	movf	lcd_str@str^0,w,c
  2002   000A7A  A4D8               	btfss	status,2,c
  2003   000A7C  0E08               	movlw	high __smallconst
  2004   000A7E  6E03               	movwf	(lcd_str@str+1)^0,c
  2005   000A80  ECE6  F005         	call	_lcd_str	;wreg free
  2006   000A84                     
  2007                           ;password.c: 42:             lcd_cmd(0xC0);
  2008   000A84  0EC0               	movlw	192
  2009   000A86  EC66  F006         	call	_lcd_cmd
  2010                           
  2011                           ;password.c: 43:             return 0;
  2012   000A8A  0E00               	movlw	0
  2013   000A8C  EF5C  F005         	goto	l177
  2014   000A90                     l1199:
  2015                           
  2016                           ;password.c: 46:          if (index < 4)
  2017   000A90  0E04               	movlw	4
  2018   000A92  602E               	cpfslt	_index^0,c
  2019   000A94  EF4E  F005         	goto	u341
  2020   000A98  EF50  F005         	goto	u340
  2021   000A9C                     u341:
  2022   000A9C  EFF4  F004         	goto	l1163
  2023   000AA0                     u340:
  2024   000AA0                     
  2025                           ;password.c: 47:         {;password.c: 48:             entered[index++] = key;
  2026   000AA0  502E               	movf	_index^0,w,c
  2027   000AA2  0F2F               	addlw	low _entered
  2028   000AA4  6ED9               	movwf	fsr2l,c
  2029   000AA6  6ADA               	clrf	fsr2h,c
  2030   000AA8  C011  FFDF         	movff	keypad_password@key,indf2
  2031   000AAC  2A2E               	incf	_index^0,f,c
  2032   000AAE                     
  2033                           ;password.c: 49:             lcd_data('*');
  2034   000AAE  0E2A               	movlw	42
  2035   000AB0  EC92  F006         	call	_lcd_data
  2036   000AB4  EFF4  F004         	goto	l1163
  2037   000AB8                     l177:
  2038   000AB8  0012               	return		;funcret
  2039   000ABA                     __end_of_keypad_password:
  2040                           	callstack 0
  2041                           
  2042 ;; *************** function _strcmp *****************
  2043 ;; Defined at:
  2044 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.50\pic\sources\c99\common\strcmp.c"
  2045 ;; Parameters:    Size  Location     Type
  2046 ;;  l               1    0[COMRAM] PTR const unsigned char 
  2047 ;;		 -> entered(5), 
  2048 ;;  r               1    1[COMRAM] PTR const unsigned char 
  2049 ;;		 -> password(5), 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;		None
  2052 ;; Return value:  Size  Location     Type
  2053 ;;                  2    0[COMRAM] int 
  2054 ;; Registers used:
  2055 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  2056 ;; Tracked objects:
  2057 ;;		On entry : 0/0
  2058 ;;		On exit  : 0/0
  2059 ;;		Unchanged: 0/0
  2060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2061 ;;      Params:         2       0       0       0       0       0       0       0       0
  2062 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2063 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2064 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2065 ;;Total ram usage:        4 bytes
  2066 ;; Hardware stack levels used: 1
  2067 ;; This function calls:
  2068 ;;		Nothing
  2069 ;; This function is called by:
  2070 ;;		_keypad_password
  2071 ;; This function uses a non-reentrant model
  2072 ;;
  2073                           
  2074                           	psect	text6
  2075   000B6E                     __ptext6:
  2076                           	callstack 0
  2077   000B6E                     _strcmp:
  2078                           	callstack 29
  2079   000B6E  EFBB  F005         	goto	l1141
  2080   000B72                     l1139:
  2081   000B72  2A01               	incf	strcmp@l^0,f,c
  2082   000B74  2A02               	incf	strcmp@r^0,f,c
  2083   000B76                     l1141:
  2084   000B76  5002               	movf	strcmp@r^0,w,c
  2085   000B78  6ED9               	movwf	fsr2l,c
  2086   000B7A  6ADA               	clrf	fsr2h,c
  2087   000B7C  5001               	movf	strcmp@l^0,w,c
  2088   000B7E  6EE1               	movwf	fsr1l,c
  2089   000B80  6AE2               	clrf	fsr1h,c
  2090   000B82  50DE               	movf	postinc2,w,c
  2091   000B84  18E6               	xorwf	postinc1,w,c
  2092   000B86  A4D8               	btfss	status,2,c
  2093   000B88  EFC8  F005         	goto	u281
  2094   000B8C  EFCA  F005         	goto	u280
  2095   000B90                     u281:
  2096   000B90  EFD5  F005         	goto	l1145
  2097   000B94                     u280:
  2098   000B94  5001               	movf	strcmp@l^0,w,c
  2099   000B96  6ED9               	movwf	fsr2l,c
  2100   000B98  6ADA               	clrf	fsr2h,c
  2101   000B9A  50DF               	movf	indf2,w,c
  2102   000B9C  A4D8               	btfss	status,2,c
  2103   000B9E  EFD3  F005         	goto	u291
  2104   000BA2  EFD5  F005         	goto	u290
  2105   000BA6                     u291:
  2106   000BA6  EFB9  F005         	goto	l1139
  2107   000BAA                     u290:
  2108   000BAA                     l1145:
  2109   000BAA  5001               	movf	strcmp@l^0,w,c
  2110   000BAC  6ED9               	movwf	fsr2l,c
  2111   000BAE  6ADA               	clrf	fsr2h,c
  2112   000BB0  50DF               	movf	indf2,w,c
  2113   000BB2  6E03               	movwf	??_strcmp^0,c
  2114   000BB4  5002               	movf	strcmp@r^0,w,c
  2115   000BB6  6ED9               	movwf	fsr2l,c
  2116   000BB8  6ADA               	clrf	fsr2h,c
  2117   000BBA  50DF               	movf	indf2,w,c
  2118   000BBC  6E04               	movwf	(??_strcmp+1)^0,c
  2119   000BBE  5004               	movf	(??_strcmp+1)^0,w,c
  2120   000BC0  5C03               	subwf	??_strcmp^0,w,c
  2121   000BC2  6E01               	movwf	?_strcmp^0,c
  2122   000BC4  6A02               	clrf	(?_strcmp+1)^0,c
  2123   000BC6  A0D8               	btfss	status,0,c
  2124   000BC8  0602               	decf	(?_strcmp+1)^0,f,c
  2125   000BCA  0012               	return		;funcret
  2126   000BCC                     __end_of_strcmp:
  2127                           	callstack 0
  2128                           
  2129 ;; *************** function _lcd_str *****************
  2130 ;; Defined at:
  2131 ;;		line 36 in file "lcd.c"
  2132 ;; Parameters:    Size  Location     Type
  2133 ;;  str             2    1[COMRAM] PTR unsigned char 
  2134 ;;		 -> login@buffer(12), STR_7(7), STR_6(17), STR_5(14), 
  2135 ;;		 -> STR_4(15), STR_3(17), main@time_buffer(12), main@buffer_str(12), 
  2136 ;;		 -> STR_2(6), STR_1(16), 
  2137 ;; Auto vars:     Size  Location     Type
  2138 ;;		None
  2139 ;; Return value:  Size  Location     Type
  2140 ;;                  1    wreg      void 
  2141 ;; Registers used:
  2142 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2143 ;; Tracked objects:
  2144 ;;		On entry : 0/0
  2145 ;;		On exit  : 0/0
  2146 ;;		Unchanged: 0/0
  2147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2148 ;;      Params:         2       0       0       0       0       0       0       0       0
  2149 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2150 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2151 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2152 ;;Total ram usage:        2 bytes
  2153 ;; Hardware stack levels used: 1
  2154 ;; Hardware stack levels required when called: 1
  2155 ;; This function calls:
  2156 ;;		_lcd_data
  2157 ;; This function is called by:
  2158 ;;		_main
  2159 ;;		_keypad_password
  2160 ;;		_login
  2161 ;; This function uses a non-reentrant model
  2162 ;;
  2163                           
  2164                           	psect	text7
  2165   000BCC                     __ptext7:
  2166                           	callstack 0
  2167   000BCC                     _lcd_str:
  2168                           	callstack 29
  2169   000BCC                     
  2170                           ;lcd.c: 37:     while (*str) {
  2171   000BCC  EFFC  F005         	goto	l1135
  2172   000BD0                     l1131:
  2173                           
  2174                           ;lcd.c: 38:         lcd_data(*str++);
  2175   000BD0  C002  FFF6         	movff	lcd_str@str,tblptrl
  2176   000BD4  C003  FFF7         	movff	lcd_str@str+1,tblptrh
  2177   000BD8  6AF8               	clrf	tblptru,c
  2178   000BDA  0E07               	movlw	(high __ramtop+-1)
  2179   000BDC  64F7               	cpfsgt	tblptrh,c
  2180   000BDE  D003               	bra	u257
  2181   000BE0  0008               	tblrd		*
  2182   000BE2  50F5               	movf	tablat,w,c
  2183   000BE4  D005               	bra	u250
  2184   000BE6                     u257:
  2185   000BE6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2186   000BEA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2187   000BEE  50EF               	movf	indf0,w,c
  2188   000BF0                     u250:
  2189   000BF0  EC92  F006         	call	_lcd_data
  2190   000BF4  4A02               	infsnz	lcd_str@str^0,f,c
  2191   000BF6  2A03               	incf	(lcd_str@str+1)^0,f,c
  2192   000BF8                     l1135:
  2193                           
  2194                           ;lcd.c: 37:     while (*str) {
  2195   000BF8  C002  FFF6         	movff	lcd_str@str,tblptrl
  2196   000BFC  C003  FFF7         	movff	lcd_str@str+1,tblptrh
  2197   000C00  6AF8               	clrf	tblptru,c
  2198   000C02  0E07               	movlw	(high __ramtop+-1)
  2199   000C04  64F7               	cpfsgt	tblptrh,c
  2200   000C06  D003               	bra	u267
  2201   000C08  0008               	tblrd		*
  2202   000C0A  50F5               	movf	tablat,w,c
  2203   000C0C  D005               	bra	u260
  2204   000C0E                     u267:
  2205   000C0E  CFF6 FFE9          	movff	tblptrl,fsr0l
  2206   000C12  CFF7 FFEA          	movff	tblptrh,fsr0h
  2207   000C16  50EF               	movf	indf0,w,c
  2208   000C18                     u260:
  2209   000C18  0900               	iorlw	0
  2210   000C1A  A4D8               	btfss	status,2,c
  2211   000C1C  EF12  F006         	goto	u271
  2212   000C20  EF14  F006         	goto	u270
  2213   000C24                     u271:
  2214   000C24  EFE8  F005         	goto	l1131
  2215   000C28                     u270:
  2216   000C28  0012               	return		;funcret
  2217   000C2A                     __end_of_lcd_str:
  2218                           	callstack 0
  2219                           
  2220 ;; *************** function _lcd_data *****************
  2221 ;; Defined at:
  2222 ;;		line 27 in file "lcd.c"
  2223 ;; Parameters:    Size  Location     Type
  2224 ;;  data            1    wreg     unsigned char 
  2225 ;; Auto vars:     Size  Location     Type
  2226 ;;  data            1    0[COMRAM] unsigned char 
  2227 ;; Return value:  Size  Location     Type
  2228 ;;                  1    wreg      void 
  2229 ;; Registers used:
  2230 ;;		wreg
  2231 ;; Tracked objects:
  2232 ;;		On entry : 0/0
  2233 ;;		On exit  : 0/0
  2234 ;;		Unchanged: 0/0
  2235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2236 ;;      Params:         0       0       0       0       0       0       0       0       0
  2237 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2238 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2239 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2240 ;;Total ram usage:        1 bytes
  2241 ;; Hardware stack levels used: 1
  2242 ;; This function calls:
  2243 ;;		Nothing
  2244 ;; This function is called by:
  2245 ;;		_lcd_str
  2246 ;;		_keypad_password
  2247 ;; This function uses a non-reentrant model
  2248 ;;
  2249                           
  2250                           	psect	text8
  2251   000D24                     __ptext8:
  2252                           	callstack 0
  2253   000D24                     _lcd_data:
  2254                           	callstack 29
  2255                           
  2256                           ;incstack = 0
  2257                           ;lcd_data@data stored from wreg
  2258   000D24  6E01               	movwf	lcd_data@data^0,c
  2259   000D26                     
  2260                           ;lcd.c: 28:     LATCbits.LATC0 = 1;
  2261   000D26  808B               	bsf	139,0,c	;volatile
  2262   000D28                     
  2263                           ;lcd.c: 30:     LATD = data;
  2264   000D28  C001  FF8C         	movff	lcd_data@data,3980	;volatile
  2265   000D2C                     
  2266                           ;lcd.c: 31:     LATCbits.LATC1 = 1;
  2267   000D2C  828B               	bsf	139,1,c	;volatile
  2268   000D2E                     
  2269                           ;lcd.c: 33:     LATCbits.LATC1 = 0;
  2270   000D2E  928B               	bcf	139,1,c	;volatile
  2271   000D30  0012               	return		;funcret
  2272   000D32                     __end_of_lcd_data:
  2273                           	callstack 0
  2274                           
  2275 ;; *************** function _lcd_cmd *****************
  2276 ;; Defined at:
  2277 ;;		line 18 in file "lcd.c"
  2278 ;; Parameters:    Size  Location     Type
  2279 ;;  cmd             1    wreg     unsigned char 
  2280 ;; Auto vars:     Size  Location     Type
  2281 ;;  cmd             1    1[COMRAM] unsigned char 
  2282 ;; Return value:  Size  Location     Type
  2283 ;;                  1    wreg      void 
  2284 ;; Registers used:
  2285 ;;		wreg, status,2, cstack
  2286 ;; Tracked objects:
  2287 ;;		On entry : 0/0
  2288 ;;		On exit  : 0/0
  2289 ;;		Unchanged: 0/0
  2290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2291 ;;      Params:         0       0       0       0       0       0       0       0       0
  2292 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2293 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2294 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2295 ;;Total ram usage:        2 bytes
  2296 ;; Hardware stack levels used: 1
  2297 ;; This function calls:
  2298 ;;		Nothing
  2299 ;; This function is called by:
  2300 ;;		_main
  2301 ;;		_lcd_init
  2302 ;;		_keypad_password
  2303 ;;		_login
  2304 ;; This function uses a non-reentrant model
  2305 ;;
  2306                           
  2307                           	psect	text9
  2308   000CCC                     __ptext9:
  2309                           	callstack 0
  2310   000CCC                     _lcd_cmd:
  2311                           	callstack 29
  2312                           
  2313                           ;incstack = 0
  2314                           ;lcd_cmd@cmd stored from wreg
  2315   000CCC  6E02               	movwf	lcd_cmd@cmd^0,c
  2316   000CCE                     
  2317                           ;lcd.c: 19:     LATCbits.LATC0 = 0;
  2318   000CCE  908B               	bcf	139,0,c	;volatile
  2319   000CD0                     
  2320                           ;lcd.c: 21:     LATD = cmd;
  2321   000CD0  C002  FF8C         	movff	lcd_cmd@cmd,3980	;volatile
  2322   000CD4                     
  2323                           ;lcd.c: 22:     LATCbits.LATC1 = 1;
  2324   000CD4  828B               	bsf	139,1,c	;volatile
  2325   000CD6                     
  2326                           ;lcd.c: 23:     _delay((unsigned long)((1)*(20000000/4000.0)));
  2327   000CD6  0E07               	movlw	7
  2328   000CD8  6E01               	movwf	??_lcd_cmd^0,c
  2329   000CDA  0E7D               	movlw	125
  2330   000CDC                     u417:
  2331   000CDC  2EE8               	decfsz	wreg,f,c
  2332   000CDE  D7FE               	bra	u417
  2333   000CE0  2E01               	decfsz	??_lcd_cmd^0,f,c
  2334   000CE2  D7FC               	bra	u417
  2335   000CE4  0000               	nop	
  2336   000CE6                     
  2337                           ;lcd.c: 24:     LATCbits.LATC1 = 0;
  2338   000CE6  928B               	bcf	139,1,c	;volatile
  2339   000CE8  0012               	return		;funcret
  2340   000CEA                     __end_of_lcd_cmd:
  2341                           	callstack 0
  2342                           
  2343 ;; *************** function _keypad_getkey *****************
  2344 ;; Defined at:
  2345 ;;		line 23 in file "keypad.c"
  2346 ;; Parameters:    Size  Location     Type
  2347 ;;		None
  2348 ;; Auto vars:     Size  Location     Type
  2349 ;;  row             1   13[COMRAM] unsigned char 
  2350 ;;  keys           12    1[COMRAM] const unsigned char [3][
  2351 ;; Return value:  Size  Location     Type
  2352 ;;                  1    wreg      unsigned char 
  2353 ;; Registers used:
  2354 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  2355 ;; Tracked objects:
  2356 ;;		On entry : 0/0
  2357 ;;		On exit  : 0/0
  2358 ;;		Unchanged: 0/0
  2359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2360 ;;      Params:         0       0       0       0       0       0       0       0       0
  2361 ;;      Locals:        13       0       0       0       0       0       0       0       0
  2362 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2363 ;;      Totals:        14       0       0       0       0       0       0       0       0
  2364 ;;Total ram usage:       14 bytes
  2365 ;; Hardware stack levels used: 1
  2366 ;; This function calls:
  2367 ;;		Nothing
  2368 ;; This function is called by:
  2369 ;;		_keypad_password
  2370 ;; This function uses a non-reentrant model
  2371 ;;
  2372                           
  2373                           	psect	text10
  2374   00085A                     __ptext10:
  2375                           	callstack 0
  2376   00085A                     _keypad_getkey:
  2377                           	callstack 29
  2378   00085A                     
  2379                           ;keypad.c: 25:     const char keys[4][3] = {
  2380   00085A  0E01               	movlw	low keypad_getkey@F3225
  2381   00085C  6EF6               	movwf	tblptrl,c
  2382   00085E                     	if	1	;There is more than 1 active tblptr byte
  2383   00085E  0E08               	movlw	high keypad_getkey@F3225
  2384   000860  6EF7               	movwf	tblptrh,c
  2385   000862                     	endif
  2386   000862                     	if	0	;There are less than 3 active tblptr bytes
  2387   000862                     	endif
  2388   000862  EE20  F002         	lfsr	2,keypad_getkey@keys
  2389   000866  0E0B               	movlw	11
  2390   000868                     u40:
  2391   000868  0009               	tblrd		*+
  2392   00086A  CFF5 FFDE          	movff	tablat,postinc2
  2393   00086E  06E8               	decf	wreg,f,c
  2394   000870  E2FB               	bc	u40
  2395   000872                     
  2396                           ;keypad.c: 31:     for (char row = 0; row < 4; row++)
  2397   000872  6A0E               	clrf	keypad_getkey@row^0,c
  2398   000874                     l84:
  2399                           
  2400                           ;keypad.c: 32:     {;keypad.c: 34:         LATBbits.LATB0 = 1;
  2401   000874  808A               	bsf	138,0,c	;volatile
  2402                           
  2403                           ;keypad.c: 35:         LATBbits.LATB1 = 1;
  2404   000876  828A               	bsf	138,1,c	;volatile
  2405                           
  2406                           ;keypad.c: 36:         LATBbits.LATB2 = 1;
  2407   000878  848A               	bsf	138,2,c	;volatile
  2408                           
  2409                           ;keypad.c: 37:         LATBbits.LATB3 = 1;
  2410   00087A  868A               	bsf	138,3,c	;volatile
  2411                           
  2412                           ;keypad.c: 40:         switch (row)
  2413   00087C  EF4C  F004         	goto	l919
  2414   000880                     l87:
  2415                           
  2416                           ;keypad.c: 43:             LATBbits.LATB0 = 0;
  2417   000880  908A               	bcf	138,0,c	;volatile
  2418                           
  2419                           ;keypad.c: 44:             break;
  2420   000882  EF5F  F004         	goto	l921
  2421   000886                     l89:
  2422                           
  2423                           ;keypad.c: 46:             LATBbits.LATB1 = 0;
  2424   000886  928A               	bcf	138,1,c	;volatile
  2425                           
  2426                           ;keypad.c: 47:             break;
  2427   000888  EF5F  F004         	goto	l921
  2428   00088C                     l90:
  2429                           
  2430                           ;keypad.c: 49:             LATBbits.LATB2 = 0;
  2431   00088C  948A               	bcf	138,2,c	;volatile
  2432                           
  2433                           ;keypad.c: 50:             break;
  2434   00088E  EF5F  F004         	goto	l921
  2435   000892                     l91:
  2436                           
  2437                           ;keypad.c: 52:             LATBbits.LATB3 = 0;
  2438   000892  968A               	bcf	138,3,c	;volatile
  2439                           
  2440                           ;keypad.c: 53:             break;
  2441   000894  EF5F  F004         	goto	l921
  2442   000898                     l919:
  2443   000898  500E               	movf	keypad_getkey@row^0,w,c
  2444                           
  2445                           ; Switch size 1, requested type "simple"
  2446                           ; Number of cases is 4, Range of values is 0 to 3
  2447                           ; switch strategies available:
  2448                           ; Name         Instructions Cycles
  2449                           ; simple_byte           13     7 (average)
  2450                           ;	Chosen strategy is simple_byte
  2451   00089A  0A00               	xorlw	0	; case 0
  2452   00089C  B4D8               	btfsc	status,2,c
  2453   00089E  EF40  F004         	goto	l87
  2454   0008A2  0A01               	xorlw	1	; case 1
  2455   0008A4  B4D8               	btfsc	status,2,c
  2456   0008A6  EF43  F004         	goto	l89
  2457   0008AA  0A03               	xorlw	3	; case 2
  2458   0008AC  B4D8               	btfsc	status,2,c
  2459   0008AE  EF46  F004         	goto	l90
  2460   0008B2  0A01               	xorlw	1	; case 3
  2461   0008B4  B4D8               	btfsc	status,2,c
  2462   0008B6  EF49  F004         	goto	l91
  2463   0008BA  EF5F  F004         	goto	l921
  2464   0008BE                     l921:
  2465                           
  2466                           ;keypad.c: 56:         _delay((unsigned long)((10)*(20000000/4000000.0)));
  2467   0008BE  0E10               	movlw	16
  2468   0008C0                     u427:
  2469   0008C0  2EE8               	decfsz	wreg,f,c
  2470   0008C2  D7FE               	bra	u427
  2471   0008C4  D000               	nop2	
  2472   0008C6                     
  2473                           ;keypad.c: 58:         if (PORTBbits.RB5 == 0)
  2474   0008C6  BA81               	btfsc	129,5,c	;volatile
  2475   0008C8  EF68  F004         	goto	u51
  2476   0008CC  EF6A  F004         	goto	u50
  2477   0008D0                     u51:
  2478   0008D0  EF81  F004         	goto	l92
  2479   0008D4                     u50:
  2480   0008D4                     
  2481                           ;keypad.c: 59:         {;keypad.c: 60:             _delay((unsigned long)((20)*(20000000
      +                          /4000.0)));
  2482   0008D4  0E82               	movlw	130
  2483   0008D6  6E01               	movwf	??_keypad_getkey^0,c
  2484   0008D8  0EDE               	movlw	222
  2485   0008DA                     u437:
  2486   0008DA  2EE8               	decfsz	wreg,f,c
  2487   0008DC  D7FE               	bra	u437
  2488   0008DE  2E01               	decfsz	??_keypad_getkey^0,f,c
  2489   0008E0  D7FC               	bra	u437
  2490   0008E2                     l93:
  2491                           
  2492                           ;keypad.c: 61:             while (PORTBbits.RB5 == 0)
  2493   0008E2  AA81               	btfss	129,5,c	;volatile
  2494   0008E4  EF76  F004         	goto	u61
  2495   0008E8  EF78  F004         	goto	u60
  2496   0008EC                     u61:
  2497   0008EC  EF71  F004         	goto	l93
  2498   0008F0                     u60:
  2499   0008F0                     
  2500                           ;keypad.c: 63:             return keys[row][0];
  2501   0008F0  500E               	movf	keypad_getkey@row^0,w,c
  2502   0008F2  0D03               	mullw	3
  2503   0008F4  50F3               	movf	243,w,c
  2504   0008F6  0F02               	addlw	low keypad_getkey@keys
  2505   0008F8  6ED9               	movwf	fsr2l,c
  2506   0008FA  6ADA               	clrf	fsr2h,c
  2507   0008FC  50DF               	movf	indf2,w,c
  2508   0008FE  EFCF  F004         	goto	l96
  2509   000902                     l92:
  2510                           
  2511                           ;keypad.c: 66:         if (PORTBbits.RB6 == 0)
  2512   000902  BC81               	btfsc	129,6,c	;volatile
  2513   000904  EF86  F004         	goto	u71
  2514   000908  EF88  F004         	goto	u70
  2515   00090C                     u71:
  2516   00090C  EFA3  F004         	goto	l97
  2517   000910                     u70:
  2518   000910                     
  2519                           ;keypad.c: 67:         {;keypad.c: 68:             _delay((unsigned long)((20)*(20000000
      +                          /4000.0)));
  2520   000910  0E82               	movlw	130
  2521   000912  6E01               	movwf	??_keypad_getkey^0,c
  2522   000914  0EDE               	movlw	222
  2523   000916                     u447:
  2524   000916  2EE8               	decfsz	wreg,f,c
  2525   000918  D7FE               	bra	u447
  2526   00091A  2E01               	decfsz	??_keypad_getkey^0,f,c
  2527   00091C  D7FC               	bra	u447
  2528   00091E                     l98:
  2529                           
  2530                           ;keypad.c: 69:             while (PORTBbits.RB6 == 0)
  2531   00091E  AC81               	btfss	129,6,c	;volatile
  2532   000920  EF94  F004         	goto	u81
  2533   000924  EF96  F004         	goto	u80
  2534   000928                     u81:
  2535   000928  EF8F  F004         	goto	l98
  2536   00092C                     u80:
  2537   00092C                     
  2538                           ;keypad.c: 71:             return keys[row][1];
  2539   00092C  500E               	movf	keypad_getkey@row^0,w,c
  2540   00092E  0D03               	mullw	3
  2541   000930  CFF3 F001          	movff	prodl,??_keypad_getkey
  2542   000934  0E01               	movlw	1
  2543   000936  2601               	addwf	??_keypad_getkey^0,f,c
  2544   000938  5001               	movf	??_keypad_getkey^0,w,c
  2545   00093A  0F02               	addlw	low keypad_getkey@keys
  2546   00093C  6ED9               	movwf	fsr2l,c
  2547   00093E  6ADA               	clrf	fsr2h,c
  2548   000940  50DF               	movf	indf2,w,c
  2549   000942  EFCF  F004         	goto	l96
  2550   000946                     l97:
  2551                           
  2552                           ;keypad.c: 74:         if (PORTBbits.RB7 == 0)
  2553   000946  BE81               	btfsc	129,7,c	;volatile
  2554   000948  EFA8  F004         	goto	u91
  2555   00094C  EFAA  F004         	goto	u90
  2556   000950                     u91:
  2557   000950  EFC5  F004         	goto	l943
  2558   000954                     u90:
  2559   000954                     
  2560                           ;keypad.c: 75:         {;keypad.c: 76:             _delay((unsigned long)((20)*(20000000
      +                          /4000.0)));
  2561   000954  0E82               	movlw	130
  2562   000956  6E01               	movwf	??_keypad_getkey^0,c
  2563   000958  0EDE               	movlw	222
  2564   00095A                     u457:
  2565   00095A  2EE8               	decfsz	wreg,f,c
  2566   00095C  D7FE               	bra	u457
  2567   00095E  2E01               	decfsz	??_keypad_getkey^0,f,c
  2568   000960  D7FC               	bra	u457
  2569   000962                     l102:
  2570                           
  2571                           ;keypad.c: 77:             while (PORTBbits.RB7 == 0)
  2572   000962  AE81               	btfss	129,7,c	;volatile
  2573   000964  EFB6  F004         	goto	u101
  2574   000968  EFB8  F004         	goto	u100
  2575   00096C                     u101:
  2576   00096C  EFB1  F004         	goto	l102
  2577   000970                     u100:
  2578   000970                     
  2579                           ;keypad.c: 79:             return keys[row][2];
  2580   000970  500E               	movf	keypad_getkey@row^0,w,c
  2581   000972  0D03               	mullw	3
  2582   000974  CFF3 F001          	movff	prodl,??_keypad_getkey
  2583   000978  0E02               	movlw	2
  2584   00097A  2601               	addwf	??_keypad_getkey^0,f,c
  2585   00097C  5001               	movf	??_keypad_getkey^0,w,c
  2586   00097E  0F02               	addlw	low keypad_getkey@keys
  2587   000980  6ED9               	movwf	fsr2l,c
  2588   000982  6ADA               	clrf	fsr2h,c
  2589   000984  50DF               	movf	indf2,w,c
  2590   000986  EFCF  F004         	goto	l96
  2591   00098A                     l943:
  2592                           
  2593                           ;keypad.c: 81:     }
  2594   00098A  2A0E               	incf	keypad_getkey@row^0,f,c
  2595   00098C  0E03               	movlw	3
  2596   00098E  640E               	cpfsgt	keypad_getkey@row^0,c
  2597   000990  EFCC  F004         	goto	u111
  2598   000994  EFCE  F004         	goto	u110
  2599   000998                     u111:
  2600   000998  EF3A  F004         	goto	l84
  2601   00099C                     u110:
  2602   00099C                     
  2603                           ;keypad.c: 83:     return 0;
  2604   00099C  0E00               	movlw	0
  2605   00099E                     l96:
  2606   00099E  0012               	return		;funcret
  2607   0009A0                     __end_of_keypad_getkey:
  2608                           	callstack 0
  2609                           
  2610 ;; *************** function _keypad_init *****************
  2611 ;; Defined at:
  2612 ;;		line 3 in file "keypad.c"
  2613 ;; Parameters:    Size  Location     Type
  2614 ;;		None
  2615 ;; Auto vars:     Size  Location     Type
  2616 ;;		None
  2617 ;; Return value:  Size  Location     Type
  2618 ;;                  1    wreg      void 
  2619 ;; Registers used:
  2620 ;;		None
  2621 ;; Tracked objects:
  2622 ;;		On entry : 0/0
  2623 ;;		On exit  : 0/0
  2624 ;;		Unchanged: 0/0
  2625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2626 ;;      Params:         0       0       0       0       0       0       0       0       0
  2627 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2628 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2629 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2630 ;;Total ram usage:        0 bytes
  2631 ;; Hardware stack levels used: 1
  2632 ;; This function calls:
  2633 ;;		Nothing
  2634 ;; This function is called by:
  2635 ;;		_main
  2636 ;; This function uses a non-reentrant model
  2637 ;;
  2638                           
  2639                           	psect	text11
  2640   000D00                     __ptext11:
  2641                           	callstack 0
  2642   000D00                     _keypad_init:
  2643                           	callstack 30
  2644   000D00                     
  2645                           ;keypad.c: 6:     TRISBbits.TRISB0 = 0;
  2646   000D00  9093               	bcf	147,0,c	;volatile
  2647                           
  2648                           ;keypad.c: 7:     TRISBbits.TRISB1 = 0;
  2649   000D02  9293               	bcf	147,1,c	;volatile
  2650                           
  2651                           ;keypad.c: 8:     TRISBbits.TRISB2 = 0;
  2652   000D04  9493               	bcf	147,2,c	;volatile
  2653                           
  2654                           ;keypad.c: 9:     TRISBbits.TRISB3 = 0;
  2655   000D06  9693               	bcf	147,3,c	;volatile
  2656                           
  2657                           ;keypad.c: 12:     TRISBbits.TRISB5 = 1;
  2658   000D08  8A93               	bsf	147,5,c	;volatile
  2659                           
  2660                           ;keypad.c: 13:     TRISBbits.TRISB6 = 1;
  2661   000D0A  8C93               	bsf	147,6,c	;volatile
  2662                           
  2663                           ;keypad.c: 14:     TRISBbits.TRISB7 = 1;
  2664   000D0C  8E93               	bsf	147,7,c	;volatile
  2665                           
  2666                           ;keypad.c: 17:     INTCON2bits.RBPU = 0;
  2667   000D0E  9EF1               	bcf	241,7,c	;volatile
  2668                           
  2669                           ;keypad.c: 20:     LATB = 0xFF;
  2670   000D10  688A               	setf	138,c	;volatile
  2671   000D12  0012               	return		;funcret
  2672   000D14                     __end_of_keypad_init:
  2673                           	callstack 0
  2674                           
  2675                           	psect	rparam
  2676   000001                     ___rparam_used  equ	1
  2677   000000                     ___param_bank   equ	0
  2678   000000                     __Lparam        equ	__Lrparam
  2679   000000                     __Hparam        equ	__Hrparam
  2680                           tosu	equ	0xFFF
  2681                           tosh	equ	0xFFE
  2682                           tosl	equ	0xFFD
  2683                           stkptr	equ	0xFFC
  2684                           pclatu	equ	0xFFB
  2685                           pclath	equ	0xFFA
  2686                           pcl	equ	0xFF9
  2687                           tblptru	equ	0xFF8
  2688                           tblptrh	equ	0xFF7
  2689                           tblptrl	equ	0xFF6
  2690                           tablat	equ	0xFF5
  2691                           prodh	equ	0xFF4
  2692                           prodl	equ	0xFF3
  2693                           indf0	equ	0xFEF
  2694                           postinc0	equ	0xFEE
  2695                           postdec0	equ	0xFED
  2696                           preinc0	equ	0xFEC
  2697                           plusw0	equ	0xFEB
  2698                           fsr0h	equ	0xFEA
  2699                           fsr0l	equ	0xFE9
  2700                           wreg	equ	0xFE8
  2701                           indf1	equ	0xFE7
  2702                           postinc1	equ	0xFE6
  2703                           postdec1	equ	0xFE5
  2704                           preinc1	equ	0xFE4
  2705                           plusw1	equ	0xFE3
  2706                           fsr1h	equ	0xFE2
  2707                           fsr1l	equ	0xFE1
  2708                           bsr	equ	0xFE0
  2709                           indf2	equ	0xFDF
  2710                           postinc2	equ	0xFDE
  2711                           postdec2	equ	0xFDD
  2712                           preinc2	equ	0xFDC
  2713                           plusw2	equ	0xFDB
  2714                           fsr2h	equ	0xFDA
  2715                           fsr2l	equ	0xFD9
  2716                           status	equ	0xFD8

Data Sizes:
    Strings     75
    Constant    12
    Data        5
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     44      56
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    lcd_str@str	PTR unsigned char  size(2) Largest target is 17
		 -> login@buffer(COMRAM[12]), main@buffer_str(COMRAM[12]), main@time_buffer(COMRAM[12]), STR_1(CODE[16]), 
		 -> STR_2(CODE[6]), STR_3(CODE[17]), STR_4(CODE[15]), STR_5(CODE[14]), 
		 -> STR_6(CODE[17]), STR_7(CODE[7]), 

    strcmp@l	PTR const unsigned char  size(1) Largest target is 5
		 -> entered(COMRAM[5]), 

    strcmp@r	PTR const unsigned char  size(1) Largest target is 5
		 -> password(COMRAM[5]), 

    uart_receive_str@buffer	PTR unsigned char  size(1) Largest target is 12
		 -> login@buffer(COMRAM[12]), main@buffer_str(COMRAM[12]), 


Critical Paths under _main in COMRAM

    _main->_keypad_password
    _lcd_init->_lcd_cmd
    _keypad_password->_keypad_getkey
    _lcd_str->_lcd_data

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                27    27      0     742
                                             17 COMRAM    27    27      0
                        _keypad_init
                    _keypad_password
                            _lcd_cmd
                           _lcd_init
                            _lcd_str
                          _uart_init
                   _uart_receive_str
                    _uart_write_char
 ---------------------------------------------------------------------------------
 (1) _uart_write_char                                      1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _uart_receive_str                                     4     3      1      93
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (1) _uart_init                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             0     0      0      15
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (1) _keypad_password                                      3     3      0     438
                                             14 COMRAM     3     3      0
                      _keypad_getkey
                            _lcd_cmd
                           _lcd_data
                            _lcd_str
                             _strcmp
 ---------------------------------------------------------------------------------
 (2) _strcmp                                               4     2      2     114
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (1) _lcd_str                                              2     0      2      70
                                              1 COMRAM     2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _lcd_cmd                                              2     2      0      15
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (2) _keypad_getkey                                       14    14      0     135
                                              0 COMRAM    14    14      0
 ---------------------------------------------------------------------------------
 (1) _keypad_init                                          0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _keypad_init
   _keypad_password
     _keypad_getkey
     _lcd_cmd
     _lcd_data
     _lcd_str
       _lcd_data
     _strcmp
   _lcd_cmd
   _lcd_init
     _lcd_cmd
   _lcd_str
   _uart_init
   _uart_receive_str
   _uart_write_char

Address spaces:
Name               Size   Autos  Total    Usage
BIGRAM            2047      0       0      0.0%
BITBANK7           256      0       0      0.0%
BANK7              256      0       0      0.0%
BITBANK6           256      0       0      0.0%
BANK6              256      0       0      0.0%
BITBANK5           256      0       0      0.0%
BANK5              256      0       0      0.0%
BITBANK4           256      0       0      0.0%
BANK4              256      0       0      0.0%
BITBANK3           256      0       0      0.0%
BANK3              256      0       0      0.0%
BITBANK2           256      0       0      0.0%
BANK2              256      0       0      0.0%
BITBANK1           256      0       0      0.0%
BANK1              256      0       0      0.0%
BITBANK0           160      0       0      0.0%
BANK0              160      0       0      0.0%
BITCOMRAM           95      0       0      0.0%
COMRAM              95     44      56     58.9%
BITBIGSFRh          82      0       0      0.0%
BITBIGSFRlh         43      0       0      0.0%
BITBIGSFRll         33      0       0      0.0%
STACK                0      0       0      0.0%
DATA                 0      0      56      0.0%


Microchip Technology PIC18 Macro Assembler V2.50 build 20240725155939 
Symbol Table                                                                                   Thu Jul 17 22:00:47 2025

              lcd_data@data 0001                          l52 0CCA                          l55 0CE8  
                        l64 0C28                          l90 088C                          l58 0D30  
                        l91 0892                          l92 0902                          l84 0874  
                        l93 08E2                          l79 0D12                          l87 0880  
                        l96 099E                          l97 0946                          l89 0886  
                        l98 091E                          u40 0868                          u50 08D4  
                        u51 08D0                          u60 08F0                          u61 08EC  
                        u70 0910                          u71 090C                          u80 092C  
                        u81 0928                          u90 0954                          u91 0950  
                       l102 0962                         l142 0CFE                         l152 0C6E  
                       l129 0D22                         l146 0C32                         l139 0CEC  
                       l148 0C40                         l177 0AB8                         l911 0872  
                       l921 08BE                         l931 0910                         l923 08C6  
                       l933 092C                         l925 08D4                         l909 085A  
                       l943 098A                         l927 08F0                         l919 0898  
                       l945 098C                         l937 0954                         l881 0BCA  
                       l947 099C                         l939 0970                         l891 0CCE  
                       l883 0D26                         l963 0CA6                         l971 0D18  
                       l893 0CD0                         l885 0D28                         l965 0CAC  
                       l973 0D1A                         l967 0D00                         l895 0CD4  
                       l887 0D2C                         l975 0D1C                         l897 0CD6  
                       l889 0D2E                         l977 0D1E                         l969 0D14  
                       l899 0CE6                         l979 0D20                         u100 0970  
                       u101 096C                         u110 099C                         u111 0998  
                       u210 0CFA                         u211 0CF6                         u300 09B6  
                       u301 09B2                         u310 09C8                         u311 09C4  
                       u320 0A00                         u321 09FC                         u250 0BF0  
                       u330 0A2E                         u331 0A2A                         u260 0C18  
                       u340 0AA0                         u341 0A9C                         u270 0C28  
                       u350 0C40                         u271 0C24                         u407 0A5E  
                       u351 0C3C                         u280 0B94                         u360 0C56  
                       u417 0CDC                         u257 0BE6                         u281 0B90  
                       u361 0C52                         u290 0BAA                         u370 0AFC  
                       u427 08C0                         u267 0C0E                         u291 0BA6  
                       u371 0AF8                         u437 08DA                         u447 0916  
                       u457 095A                         u387 0B08                         u397 0B58  
                       wreg 0FE8                        l1201 0AA0                        l1131 0BD0  
                      l1203 0AAC                        l1211 0C2A                        l1133 0BF4  
                      l1141 0B76                        l1205 0AAE                        l1213 0C44  
                      l1053 0CEC                        l1221 0ABA                        l1135 0BF8  
                      l1143 0B94                        l1151 09A6                        l1055 0CFA  
                      l1231 0ACE                        l1223 0ABC                        l1129 0BCC  
                      l1145 0BAA                        l1137 0B6E                        l1161 09E2  
                      l1153 09B6                        l1217 0C5A                        l1241 0AFC  
                      l1233 0ADE                        l1225 0AC0                        l1139 0B72  
                      l1171 0A0A                        l1163 09E8                        l1155 09C8  
                      l1219 0C66                        l1251 0B36                        l1243 0AFE  
                      l1235 0AE4                        l1227 0AC4                        l1173 0A10  
                      l1157 09CC                        l1149 09A0                        l1253 0B3C  
                      l1245 0B14                        l1237 0AE6                        l1229 0AC8  
                      l1191 0A6E                        l1175 0A2E                        l1183 0A44  
                      l1159 09D2                        l1167 09EE                        l1255 0B44  
                      l1247 0B20                        l1239 0AEC                        l1193 0A74  
                      l1185 0A54                        l1177 0A3E                        l1169 0A00  
                      l1257 0B4E                        l1249 0B30                        l1195 0A84  
                      l1187 0A6A                        l1189 0A6C                        l1199 0A90  
                      STR_1 081E                        STR_2 0852                        STR_3 080D  
                      STR_4 082E                        STR_5 083D                        STR_6 080D  
                      STR_7 084B                        _BRGH 7D62                        _CREN 7D5C  
                      _LATB 0F8A                        _LATD 0F8C                        _RCIF 7CF5  
                      _OERR 7D59                        _SPEN 7D5F                        _TRMT 7D61  
                      _TXEN 7D65                        _SYNC 7D64                        _main 0ABA  
                      fsr0h 0FEA                        fsr1h 0FE2                        indf0 0FEF  
                      fsr2h 0FDA                        fsr0l 0FE9                        indf2 0FDF  
                      fsr1l 0FE1                        fsr2l 0FD9                        prodl 0FF3  
                      start 0000                ___param_bank 0000                       ?_main 0001  
                     _RCREG 0FAE                       _SPBRG 0FAF                       _TRISD 0F95  
                     _TXREG 0FAD             __end_of_lcd_cmd 0CEA             __end_of_lcd_str 0C2A  
              ?_keypad_init 0001                       _index 002E                       tablat 0FF5  
                     status 0FD8             __initialization 0C70                __end_of_main 0B6E  
                    ??_main 0012               __activetblptr 0002            __end_of_lcd_data 0D32  
          __end_of_lcd_init 0CCC           uart_receive_str@i 0002           ??_keypad_password 000F  
                    clear_0 0C96                      isa$std 0001                   ??_lcd_cmd 0001  
                    _strcmp 0B6E                   ??_lcd_str 0004           ?_uart_receive_str 0001  
              __pdataCOMRAM 0034                __mediumconst 0000                      tblptrh 0FF7  
                    tblptrl 0FF6                      tblptru 0FF8          ??_uart_receive_str 0002  
         ??_uart_write_char 0001                  __accesstop 0060     __end_of__initialization 0C9C  
             ___rparam_used 0001  __end_ofkeypad_getkey@F3225 080D              __pcstackCOMRAM 0001  
            main@buffer_str 0020                     ?_strcmp 0001               _keypad_getkey 085A  
                 ?_lcd_data 0001                   ?_lcd_init 0001                     __Hparam 0000  
                   __Lparam 0000                __psmallconst 0800          uart_receive_str@ch 0004  
                   __pcinit 0C70                     __ramtop 0800                     __ptext0 0ABA  
                   __ptext1 0CEA                     __ptext2 0C2A                     __ptext3 0D14  
                   __ptext4 0CA6                     __ptext5 09A0                     __ptext6 0B6E  
                   __ptext7 0BCC                     __ptext8 0D24                     __ptext9 0CCC  
                   _lcd_cmd 0CCC                     _lcd_str 0BCC              ?_keypad_getkey 0001  
                   _entered 002F                  ??_lcd_data 0001                  ??_lcd_init 0003  
      end_of_initialization 0C9C               __Lmediumconst 0000             _keypad_password 09A0  
         __end_of_uart_init 0D24                     postdec1 0FE5                     postinc0 0FEE  
                   postinc1 0FE6                     postinc2 0FDE             _uart_write_char 0CEA  
                   strcmp@l 0001                     strcmp@r 0002                   _PORTBbits 0F81  
                 _TRISBbits 0F93                   _TRISCbits 0F94                  lcd_cmd@cmd 0002  
                lcd_str@str 0002             ??_keypad_getkey 0001               __pidataCOMRAM 0D32  
            __end_of_strcmp 0BCC          keypad_getkey@F3225 0801         start_initialization 0C70  
   __end_of_keypad_password 0ABA         uart_write_char@data 0001     __end_of_uart_write_char 0D00  
                  ??_strcmp 0003                 __pbssCOMRAM 002D      uart_receive_str@buffer 0001  
   keypad_password@position 002D               ??_keypad_init 0001                    ?_lcd_cmd 0001  
                  ?_lcd_str 0002                 __smallconst 0800            ?_keypad_password 0001  
                  _LATBbits 0F8A                    _LATCbits 0F8B            _uart_receive_str 0C2A  
       __end_of_keypad_init 0D14            ?_uart_write_char 0001                   _uart_init 0D14  
               _INTCON2bits 0FF1                   copy_data0 0C84           keypad_getkey@keys 0002  
                  __Hrparam 0000                    __Lrparam 0000                  ?_uart_init 0001  
                  __ptext10 085A                    __ptext11 0D00                    _lcd_data 0D24  
               _keypad_init 0D00                    _lcd_init 0CA6                    _password 0034  
                  isa$xinst 0000                    main@auth 002C             main@time_buffer 0014  
     __end_of_keypad_getkey 09A0          keypad_password@key 0011            keypad_getkey@row 000E  
               ??_uart_init 0001    __end_of_uart_receive_str 0C70  
